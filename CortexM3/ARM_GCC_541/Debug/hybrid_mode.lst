ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"hybrid_mode.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TPS_to_Duty_Cycle_Percentage,"ax",%progbits
  20              		.align	2
  21              		.global	TPS_to_Duty_Cycle_Percentage
  22              		.thumb
  23              		.thumb_func
  24              		.type	TPS_to_Duty_Cycle_Percentage, %function
  25              	TPS_to_Duty_Cycle_Percentage:
  26              	.LFB63:
  27              		.file 1 "src\\hybrid_mode.c"
   1:src/hybrid_mode.c **** /*
   2:src/hybrid_mode.c ****  * File:        hybrid_mode.c
   3:src/hybrid_mode.c ****  * Description: Implements the hybrid drive control strategies for the HCM project. Based on curren
   4:src/hybrid_mode.c ****  *              vehicle status (gear, RPM, speed, TPS, brake state) and user input, this module 
   5:src/hybrid_mode.c ****  *              selects and applies the appropriate driving mode by updating the hybrid_state
   6:src/hybrid_mode.c ****  *              and transmitting the command via CAN to the ESC.
   7:src/hybrid_mode.c **** */
   8:src/hybrid_mode.c **** 
   9:src/hybrid_mode.c **** #include <include/hybrid_mode.h>
  10:src/hybrid_mode.c **** 
  11:src/hybrid_mode.c **** /*
  12:src/hybrid_mode.c **** ** Hybrid Strategy Modes **
  13:src/hybrid_mode.c ****   |----|-----------------------|-------------------------------------------------------|
  14:src/hybrid_mode.c ****   | ID | Name                  | Description                                           |
  15:src/hybrid_mode.c ****   |----|-----------------------|-------------------------------------------------------|
  16:src/hybrid_mode.c ****   | 0  | Freewheel             | Default idle mode                                     |
  17:src/hybrid_mode.c ****   | 1  | Manual (Boost)        | Full torque if boost button is active                 |
  18:src/hybrid_mode.c ****   | 2  | Launch Assist         | Active at low RPM, low speed, high TPS, gear 1        |
  19:src/hybrid_mode.c ****   | 3  | Auto No Regen         | Proportional torque, no regen                         |
  20:src/hybrid_mode.c ****   | 4  | Auto Brake Regen      | Regen on brake press                                  |
  21:src/hybrid_mode.c ****   | 5  | Auto TPS-Based Regen  | Regen when TPS < 50% or braking                       |
  22:src/hybrid_mode.c ****   | 6  | Torque Fill           | Full torque between 2000–8000 RPM, regen on brake     |
  23:src/hybrid_mode.c ****   |----|-----------------------|-------------------------------------------------------|
  24:src/hybrid_mode.c ****   *
  25:src/hybrid_mode.c ****   * Auto mode is mapping TPS from 50 to 100
  26:src/hybrid_mode.c ****   * ! Boost button overrides auto mode
  27:src/hybrid_mode.c **** */
  28:src/hybrid_mode.c **** 
  29:src/hybrid_mode.c **** /**************************************************************************************************
  30:src/hybrid_mode.c **** * Global variables
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 2


  31:src/hybrid_mode.c **** ***************************************************************************************************
  32:src/hybrid_mode.c **** volatile HY_strategy_t hybrid_state = {0, 0};
  33:src/hybrid_mode.c **** 
  34:src/hybrid_mode.c **** /**************************************************************************************************
  35:src/hybrid_mode.c **** * Functions
  36:src/hybrid_mode.c **** ***************************************************************************************************
  37:src/hybrid_mode.c **** /*
  38:src/hybrid_mode.c ****  * Function:    TPS_to_Duty_Cycle_Percentage
  39:src/hybrid_mode.c ****  * Description: Converts the TPS value (50–100%) to a proportional duty cycle.
  40:src/hybrid_mode.c ****  * Parameters:
  41:src/hybrid_mode.c ****  *   - tps_percentage: Throttle position sensor value from ECU [0–100].
  42:src/hybrid_mode.c ****  * Returns:
  43:src/hybrid_mode.c ****  *   - A duty cycle percentage [0–100], mapped linearly for TPS ≥ 50.
  44:src/hybrid_mode.c ****  *     Returns 0 for TPS < 50.
  45:src/hybrid_mode.c ****  */
  46:src/hybrid_mode.c **** uint8_t TPS_to_Duty_Cycle_Percentage(uint8_t tps_percentage)
  47:src/hybrid_mode.c **** {
  28              		.loc 1 47 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  48:src/hybrid_mode.c ****     if (tps_percentage >= 50)
  34              		.loc 1 48 0
  35 0000 3128     		cmp	r0, #49
  36 0002 03D9     		bls	.L3
  49:src/hybrid_mode.c ****         return 2 * (tps_percentage - 50);
  37              		.loc 1 49 0
  38 0004 3238     		subs	r0, r0, #50
  39              	.LVL1:
  40 0006 4000     		lsls	r0, r0, #1
  41 0008 C0B2     		uxtb	r0, r0
  42 000a 7047     		bx	lr
  43              	.LVL2:
  44              	.L3:
  50:src/hybrid_mode.c ****     else
  51:src/hybrid_mode.c ****         return 0;
  45              		.loc 1 51 0
  46 000c 0020     		movs	r0, #0
  47              	.LVL3:
  52:src/hybrid_mode.c **** }
  48              		.loc 1 52 0
  49 000e 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE63:
  52              		.size	TPS_to_Duty_Cycle_Percentage, .-TPS_to_Duty_Cycle_Percentage
  53              		.section	.text.Map_Duty_Cycle,"ax",%progbits
  54              		.align	2
  55              		.global	Map_Duty_Cycle
  56              		.thumb
  57              		.thumb_func
  58              		.type	Map_Duty_Cycle, %function
  59              	Map_Duty_Cycle:
  60              	.LFB64:
  53:src/hybrid_mode.c **** 
  54:src/hybrid_mode.c **** /*
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 3


  55:src/hybrid_mode.c ****  * Function:    Map_Duty_Cycle
  56:src/hybrid_mode.c ****  * Description: Converts a duty cycle percentage to a 15-bit signed integer for CAN transmission.
  57:src/hybrid_mode.c ****  * Parameters:
  58:src/hybrid_mode.c ****  *   - duty_cycle_percentage: Desired motor duty (in percent, −100 to 100).
  59:src/hybrid_mode.c ****  * Returns:
  60:src/hybrid_mode.c ****  *   - 15-bit signed value scaled to match ESC input format.
  61:src/hybrid_mode.c ****  */
  62:src/hybrid_mode.c **** int16_t Map_Duty_Cycle(int8_t duty_cycle_percentage)
  63:src/hybrid_mode.c **** {
  61              		.loc 1 63 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL4:
  64:src/hybrid_mode.c ****     return (int16_t)((duty_cycle_percentage * MAX_VALUE_15BIT) / 100);
  67              		.loc 1 64 0
  68 0000 C0EBC030 		rsb	r0, r0, r0, lsl #15
  69              	.LVL5:
  70 0004 024B     		ldr	r3, .L5
  71 0006 A3FB0030 		umull	r3, r0, r3, r0
  65:src/hybrid_mode.c **** }
  72              		.loc 1 65 0
  73 000a 40F34F10 		sbfx	r0, r0, #5, #16
  74 000e 7047     		bx	lr
  75              	.L6:
  76              		.align	2
  77              	.L5:
  78 0010 1F85EB51 		.word	1374389535
  79              		.cfi_endproc
  80              	.LFE64:
  81              		.size	Map_Duty_Cycle, .-Map_Duty_Cycle
  82              		.section	.text.Set_Strategy_Freewheel,"ax",%progbits
  83              		.align	2
  84              		.global	Set_Strategy_Freewheel
  85              		.thumb
  86              		.thumb_func
  87              		.type	Set_Strategy_Freewheel, %function
  88              	Set_Strategy_Freewheel:
  89              	.LFB66:
  66:src/hybrid_mode.c **** 
  67:src/hybrid_mode.c **** /*
  68:src/hybrid_mode.c ****  * Function:    Set_Strategy
  69:src/hybrid_mode.c ****  * Description: Applies the appropriate hybrid driving strategy based on selector input,
  70:src/hybrid_mode.c ****  *              vehicle state, and driver override.
  71:src/hybrid_mode.c ****  *
  72:src/hybrid_mode.c ****  * Parameters:
  73:src/hybrid_mode.c ****  *   - sel_strategy: User-selected strategy index [1–6].
  74:src/hybrid_mode.c ****  *
  75:src/hybrid_mode.c ****  * Logic:
  76:src/hybrid_mode.c ****  *   - If gear is neutral or speed is too low/high -> Freewheel.
  77:src/hybrid_mode.c ****  *   - If boost button is pressed, brake is not, and sel_strategy > 0 -> Full torque.
  78:src/hybrid_mode.c ****  *   - Otherwise, applies strategy based on sel_strategy.
  79:src/hybrid_mode.c ****  *   - Defaults to Freewheel if sel_strategy is invalid.
  80:src/hybrid_mode.c ****  *
  81:src/hybrid_mode.c ****  * Sends the selected driving mode and duty cycle to the ESC via CAN.
  82:src/hybrid_mode.c ****  */
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 4


  83:src/hybrid_mode.c **** void Set_Strategy(uint8_t sel_strategy)
  84:src/hybrid_mode.c **** {
  85:src/hybrid_mode.c ****     if ((car_state.gear == NEUTRAL_GEAR) || (car_state.vss <= MIN_VSS_TO_DEPLOY) || (car_state.vss 
  86:src/hybrid_mode.c ****         Set_Strategy_Freewheel();
  87:src/hybrid_mode.c ****     else if ((Read_Boost_Button() == STD_ON) && (car_state.brake_state == STD_OFF) && (sel_strategy
  88:src/hybrid_mode.c ****     {
  89:src/hybrid_mode.c ****         hybrid_state.driving_mode = TORQUE_MODE;
  90:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = 100;
  91:src/hybrid_mode.c ****     }
  92:src/hybrid_mode.c ****     else
  93:src/hybrid_mode.c ****         switch (sel_strategy)
  94:src/hybrid_mode.c ****         {
  95:src/hybrid_mode.c ****             case 1:
  96:src/hybrid_mode.c ****                 Set_Strategy_Manual();
  97:src/hybrid_mode.c ****                 break;
  98:src/hybrid_mode.c **** 
  99:src/hybrid_mode.c ****             case 2:
 100:src/hybrid_mode.c ****                 Set_Strategy_Launch_Assist();
 101:src/hybrid_mode.c ****                 break;
 102:src/hybrid_mode.c **** 
 103:src/hybrid_mode.c ****             case 3:
 104:src/hybrid_mode.c ****                 Set_Strategy_Auto_No_Regen();
 105:src/hybrid_mode.c ****                 break;
 106:src/hybrid_mode.c **** 
 107:src/hybrid_mode.c ****             case 4:
 108:src/hybrid_mode.c ****                 Set_Strategy_Auto_Brake_Regen();
 109:src/hybrid_mode.c ****                 break;
 110:src/hybrid_mode.c **** 
 111:src/hybrid_mode.c ****             case 5:
 112:src/hybrid_mode.c ****                 Set_Strategy_Auto_Always_Regen();
 113:src/hybrid_mode.c ****                 break;
 114:src/hybrid_mode.c **** 
 115:src/hybrid_mode.c ****             case 6:
 116:src/hybrid_mode.c ****                 Set_Strategy_Torque_Fill();
 117:src/hybrid_mode.c ****                 break;
 118:src/hybrid_mode.c **** 
 119:src/hybrid_mode.c ****             default:
 120:src/hybrid_mode.c ****                 Set_Strategy_Freewheel();
 121:src/hybrid_mode.c ****         }
 122:src/hybrid_mode.c ****     
 123:src/hybrid_mode.c ****     CAN_Transmit_To_ESC(hybrid_state.driving_mode, hybrid_state.duty_cycle_percentage);
 124:src/hybrid_mode.c **** }
 125:src/hybrid_mode.c **** 
 126:src/hybrid_mode.c **** /*
 127:src/hybrid_mode.c ****  * Function:    Set_Strategy_Freewheel
 128:src/hybrid_mode.c ****  * Description: Disables hybrid power by setting mode to Freewheel and zero duty cycle.
 129:src/hybrid_mode.c ****  */
 130:src/hybrid_mode.c **** void Set_Strategy_Freewheel()
 131:src/hybrid_mode.c **** {
  90              		.loc 1 131 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 132:src/hybrid_mode.c ****     hybrid_state.driving_mode = FREEWHEEL_MODE;
  95              		.loc 1 132 0
  96 0000 024B     		ldr	r3, .L8
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 5


  97 0002 0022     		movs	r2, #0
  98 0004 1A70     		strb	r2, [r3]
 133:src/hybrid_mode.c ****     hybrid_state.duty_cycle_percentage = 0;
  99              		.loc 1 133 0
 100 0006 5A70     		strb	r2, [r3, #1]
 101 0008 7047     		bx	lr
 102              	.L9:
 103 000a 00BF     		.align	2
 104              	.L8:
 105 000c 00000000 		.word	.LANCHOR0
 106              		.cfi_endproc
 107              	.LFE66:
 108              		.size	Set_Strategy_Freewheel, .-Set_Strategy_Freewheel
 109              		.section	.text.Set_Strategy_Manual,"ax",%progbits
 110              		.align	2
 111              		.global	Set_Strategy_Manual
 112              		.thumb
 113              		.thumb_func
 114              		.type	Set_Strategy_Manual, %function
 115              	Set_Strategy_Manual:
 116              	.LFB67:
 134:src/hybrid_mode.c **** }
 135:src/hybrid_mode.c **** 
 136:src/hybrid_mode.c **** /*
 137:src/hybrid_mode.c ****  * Function:    Set_Strategy_Manual
 138:src/hybrid_mode.c ****  * Description: Enables full power (boost mode) if the boost button is pressed and the brake is not
 139:src/hybrid_mode.c ****  *              Falls back to Freewheel otherwise.
 140:src/hybrid_mode.c ****  */
 141:src/hybrid_mode.c **** void Set_Strategy_Manual()
 142:src/hybrid_mode.c **** {
 117              		.loc 1 142 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 08B5     		push	{r3, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 3, -8
 124              		.cfi_offset 14, -4
 143:src/hybrid_mode.c ****     /* The logic for the boost button is in the main Set_Strategy() function;
 144:src/hybrid_mode.c ****      * If the program enters here it means the selector is on manual,
 145:src/hybrid_mode.c ****      * but boost button not pressed -> freewheel
 146:src/hybrid_mode.c ****      */
 147:src/hybrid_mode.c ****     Set_Strategy_Freewheel();
 125              		.loc 1 147 0
 126 0002 FFF7FEFF 		bl	Set_Strategy_Freewheel
 127              	.LVL6:
 128 0006 08BD     		pop	{r3, pc}
 129              		.cfi_endproc
 130              	.LFE67:
 131              		.size	Set_Strategy_Manual, .-Set_Strategy_Manual
 132              		.section	.text.Set_Strategy_Launch_Assist,"ax",%progbits
 133              		.align	2
 134              		.global	Set_Strategy_Launch_Assist
 135              		.thumb
 136              		.thumb_func
 137              		.type	Set_Strategy_Launch_Assist, %function
 138              	Set_Strategy_Launch_Assist:
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 6


 139              	.LFB68:
 148:src/hybrid_mode.c **** }
 149:src/hybrid_mode.c **** 
 150:src/hybrid_mode.c **** /*
 151:src/hybrid_mode.c ****  * Function:    Set_Strategy_Launch_Assist
 152:src/hybrid_mode.c ****  * Description: Engages full torque at launch under these conditions:
 153:src/hybrid_mode.c ****  *              - RPM ≤ 7500
 154:src/hybrid_mode.c ****  *              - VSS ≤ 45 km/h
 155:src/hybrid_mode.c ****  *              - TPS ≥ 80%
 156:src/hybrid_mode.c ****  *              - Gear = 1
 157:src/hybrid_mode.c ****  *              - Brake not pressed
 158:src/hybrid_mode.c ****  *              Falls back to Freewheel otherwise.
 159:src/hybrid_mode.c ****  */
 160:src/hybrid_mode.c **** void Set_Strategy_Launch_Assist()
 161:src/hybrid_mode.c **** {
 140              		.loc 1 161 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 3, -8
 147              		.cfi_offset 14, -4
 162:src/hybrid_mode.c ****     if ((car_state.rpm <= 7500) && (car_state.vss <= 45) && (car_state.tps >= 80) \
 148              		.loc 1 162 0
 149 0002 124B     		ldr	r3, .L16
 150 0004 5B88     		ldrh	r3, [r3, #2]
 151 0006 9BB2     		uxth	r3, r3
 152 0008 41F64C52 		movw	r2, #7500
 153 000c 9342     		cmp	r3, r2
 154 000e 19D8     		bhi	.L13
 155              		.loc 1 162 0 is_stmt 0 discriminator 1
 156 0010 0E4B     		ldr	r3, .L16
 157 0012 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 158 0014 DBB2     		uxtb	r3, r3
 159 0016 2D2B     		cmp	r3, #45
 160 0018 14D8     		bhi	.L13
 161              		.loc 1 162 0 discriminator 2
 162 001a 0C4B     		ldr	r3, .L16
 163 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 164 001e DBB2     		uxtb	r3, r3
 165 0020 4F2B     		cmp	r3, #79
 166 0022 0FD9     		bls	.L13
 163:src/hybrid_mode.c ****         && (car_state.gear == 1) && (car_state.brake_state == STD_OFF))
 167              		.loc 1 163 0 is_stmt 1
 168 0024 094B     		ldr	r3, .L16
 169 0026 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 170 0028 DBB2     		uxtb	r3, r3
 171 002a 012B     		cmp	r3, #1
 172 002c 0AD1     		bne	.L13
 173              		.loc 1 163 0 is_stmt 0 discriminator 1
 174 002e 074B     		ldr	r3, .L16
 175 0030 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 176 0032 13F0FF0F 		tst	r3, #255
 177 0036 05D1     		bne	.L13
 164:src/hybrid_mode.c ****     {
 165:src/hybrid_mode.c ****         hybrid_state.driving_mode = TORQUE_MODE;
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 7


 178              		.loc 1 165 0 is_stmt 1
 179 0038 054B     		ldr	r3, .L16+4
 180 003a 0222     		movs	r2, #2
 181 003c 1A70     		strb	r2, [r3]
 166:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = 100;
 182              		.loc 1 166 0
 183 003e 6422     		movs	r2, #100
 184 0040 5A70     		strb	r2, [r3, #1]
 185 0042 08BD     		pop	{r3, pc}
 186              	.L13:
 167:src/hybrid_mode.c ****     }
 168:src/hybrid_mode.c ****     else
 169:src/hybrid_mode.c ****         Set_Strategy_Freewheel();
 187              		.loc 1 169 0
 188 0044 FFF7FEFF 		bl	Set_Strategy_Freewheel
 189              	.LVL7:
 190 0048 08BD     		pop	{r3, pc}
 191              	.L17:
 192 004a 00BF     		.align	2
 193              	.L16:
 194 004c 00000000 		.word	car_state
 195 0050 00000000 		.word	.LANCHOR0
 196              		.cfi_endproc
 197              	.LFE68:
 198              		.size	Set_Strategy_Launch_Assist, .-Set_Strategy_Launch_Assist
 199              		.section	.text.Set_Strategy_Auto_No_Regen,"ax",%progbits
 200              		.align	2
 201              		.global	Set_Strategy_Auto_No_Regen
 202              		.thumb
 203              		.thumb_func
 204              		.type	Set_Strategy_Auto_No_Regen, %function
 205              	Set_Strategy_Auto_No_Regen:
 206              	.LFB69:
 170:src/hybrid_mode.c **** }
 171:src/hybrid_mode.c **** 
 172:src/hybrid_mode.c **** /*
 173:src/hybrid_mode.c ****  * Function:    Set_Strategy_Auto_No_Regen
 174:src/hybrid_mode.c ****  * Description: Applies torque proportional to TPS when brake is not pressed.
 175:src/hybrid_mode.c ****  *              Falls back to Freewheel if brake is active.
 176:src/hybrid_mode.c ****  */
 177:src/hybrid_mode.c **** void Set_Strategy_Auto_No_Regen()
 178:src/hybrid_mode.c **** {
 207              		.loc 1 178 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 10B5     		push	{r4, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
 214              		.cfi_offset 14, -4
 179:src/hybrid_mode.c ****     if ((car_state.brake_state == STD_OFF))
 215              		.loc 1 179 0
 216 0002 094B     		ldr	r3, .L22
 217 0004 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 218 0006 13F0FF0F 		tst	r3, #255
 219 000a 09D1     		bne	.L19
 180:src/hybrid_mode.c ****     {
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 8


 181:src/hybrid_mode.c ****         hybrid_state.driving_mode = TORQUE_MODE;
 220              		.loc 1 181 0
 221 000c 074C     		ldr	r4, .L22+4
 222 000e 0223     		movs	r3, #2
 223 0010 2370     		strb	r3, [r4]
 182:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = TPS_to_Duty_Cycle_Percentage(car_state.tps);
 224              		.loc 1 182 0
 225 0012 054B     		ldr	r3, .L22
 226 0014 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 227 0016 FFF7FEFF 		bl	TPS_to_Duty_Cycle_Percentage
 228              	.LVL8:
 229 001a 40B2     		sxtb	r0, r0
 230 001c 6070     		strb	r0, [r4, #1]
 231 001e 10BD     		pop	{r4, pc}
 232              	.L19:
 183:src/hybrid_mode.c ****     }
 184:src/hybrid_mode.c ****     else
 185:src/hybrid_mode.c ****         Set_Strategy_Freewheel();
 233              		.loc 1 185 0
 234 0020 FFF7FEFF 		bl	Set_Strategy_Freewheel
 235              	.LVL9:
 236 0024 10BD     		pop	{r4, pc}
 237              	.L23:
 238 0026 00BF     		.align	2
 239              	.L22:
 240 0028 00000000 		.word	car_state
 241 002c 00000000 		.word	.LANCHOR0
 242              		.cfi_endproc
 243              	.LFE69:
 244              		.size	Set_Strategy_Auto_No_Regen, .-Set_Strategy_Auto_No_Regen
 245              		.section	.text.Set_Strategy_Auto_Brake_Regen,"ax",%progbits
 246              		.align	2
 247              		.global	Set_Strategy_Auto_Brake_Regen
 248              		.thumb
 249              		.thumb_func
 250              		.type	Set_Strategy_Auto_Brake_Regen, %function
 251              	Set_Strategy_Auto_Brake_Regen:
 252              	.LFB70:
 186:src/hybrid_mode.c **** }
 187:src/hybrid_mode.c **** 
 188:src/hybrid_mode.c **** /*
 189:src/hybrid_mode.c ****  * Function:    Set_Strategy_Auto_Brake_Regen
 190:src/hybrid_mode.c ****  * Description: Applies torque proportional to TPS when brake is not pressed.
 191:src/hybrid_mode.c ****  *              Switches to full regenerative braking (BRAKE mode) when brake is pressed.
 192:src/hybrid_mode.c ****  */
 193:src/hybrid_mode.c **** void Set_Strategy_Auto_Brake_Regen()
 194:src/hybrid_mode.c **** {
 253              		.loc 1 194 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 195:src/hybrid_mode.c ****     if ((car_state.brake_state == STD_OFF))
 257              		.loc 1 195 0
 258 0000 0A4B     		ldr	r3, .L29
 259 0002 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 260 0004 13F0FF0F 		tst	r3, #255
 261 0008 0AD1     		bne	.L25
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 9


 194:src/hybrid_mode.c ****     if ((car_state.brake_state == STD_OFF))
 262              		.loc 1 194 0
 263 000a 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 196:src/hybrid_mode.c ****     {
 197:src/hybrid_mode.c ****         hybrid_state.driving_mode = TORQUE_MODE;
 267              		.loc 1 197 0
 268 000c 084C     		ldr	r4, .L29+4
 269 000e 0223     		movs	r3, #2
 270 0010 2370     		strb	r3, [r4]
 198:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = TPS_to_Duty_Cycle_Percentage(car_state.tps);
 271              		.loc 1 198 0
 272 0012 064B     		ldr	r3, .L29
 273 0014 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 274 0016 FFF7FEFF 		bl	TPS_to_Duty_Cycle_Percentage
 275              	.LVL10:
 276 001a 40B2     		sxtb	r0, r0
 277 001c 6070     		strb	r0, [r4, #1]
 278 001e 10BD     		pop	{r4, pc}
 279              	.L25:
 280              		.cfi_def_cfa_offset 0
 281              		.cfi_restore 4
 282              		.cfi_restore 14
 199:src/hybrid_mode.c ****     }
 200:src/hybrid_mode.c ****     else
 201:src/hybrid_mode.c ****     {
 202:src/hybrid_mode.c ****         hybrid_state.driving_mode = BRAKE_MODE;
 283              		.loc 1 202 0
 284 0020 034B     		ldr	r3, .L29+4
 285 0022 0822     		movs	r2, #8
 286 0024 1A70     		strb	r2, [r3]
 203:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = 100u;
 287              		.loc 1 203 0
 288 0026 6422     		movs	r2, #100
 289 0028 5A70     		strb	r2, [r3, #1]
 204:src/hybrid_mode.c ****     }
 205:src/hybrid_mode.c **** }
 290              		.loc 1 205 0
 291 002a 7047     		bx	lr
 292              	.L30:
 293              		.align	2
 294              	.L29:
 295 002c 00000000 		.word	car_state
 296 0030 00000000 		.word	.LANCHOR0
 297              		.cfi_endproc
 298              	.LFE70:
 299              		.size	Set_Strategy_Auto_Brake_Regen, .-Set_Strategy_Auto_Brake_Regen
 300              		.section	.text.Set_Strategy_Auto_Always_Regen,"ax",%progbits
 301              		.align	2
 302              		.global	Set_Strategy_Auto_Always_Regen
 303              		.thumb
 304              		.thumb_func
 305              		.type	Set_Strategy_Auto_Always_Regen, %function
 306              	Set_Strategy_Auto_Always_Regen:
 307              	.LFB71:
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 10


 206:src/hybrid_mode.c **** 
 207:src/hybrid_mode.c **** /*
 208:src/hybrid_mode.c ****  * Function:    Set_Strategy_Auto_Always_Regen
 209:src/hybrid_mode.c ****  * Description: Applies torque proportional to TPS if TPS > 50 and brake is not pressed.
 210:src/hybrid_mode.c ****  *              Applies full regenerative braking otherwise (coasting or braking).
 211:src/hybrid_mode.c ****  */
 212:src/hybrid_mode.c **** void Set_Strategy_Auto_Always_Regen()
 213:src/hybrid_mode.c **** {
 308              		.loc 1 213 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 214:src/hybrid_mode.c ****     if ((car_state.brake_state == STD_OFF) && (car_state.tps > 50))
 312              		.loc 1 214 0
 313 0000 0D4B     		ldr	r3, .L36
 314 0002 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 315 0004 13F0FF0F 		tst	r3, #255
 316 0008 0FD1     		bne	.L32
 317              		.loc 1 214 0 is_stmt 0 discriminator 1
 318 000a 0B4B     		ldr	r3, .L36
 319 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 320 000e DBB2     		uxtb	r3, r3
 321 0010 322B     		cmp	r3, #50
 322 0012 0AD9     		bls	.L32
 213:src/hybrid_mode.c ****     if ((car_state.brake_state == STD_OFF) && (car_state.tps > 50))
 323              		.loc 1 213 0 is_stmt 1
 324 0014 10B5     		push	{r4, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 4, -8
 327              		.cfi_offset 14, -4
 215:src/hybrid_mode.c ****     {
 216:src/hybrid_mode.c ****         hybrid_state.driving_mode = TORQUE_MODE;
 328              		.loc 1 216 0
 329 0016 094C     		ldr	r4, .L36+4
 330 0018 0223     		movs	r3, #2
 331 001a 2370     		strb	r3, [r4]
 217:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = TPS_to_Duty_Cycle_Percentage(car_state.tps);
 332              		.loc 1 217 0
 333 001c 064B     		ldr	r3, .L36
 334 001e 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 335 0020 FFF7FEFF 		bl	TPS_to_Duty_Cycle_Percentage
 336              	.LVL11:
 337 0024 40B2     		sxtb	r0, r0
 338 0026 6070     		strb	r0, [r4, #1]
 339 0028 10BD     		pop	{r4, pc}
 340              	.L32:
 341              		.cfi_def_cfa_offset 0
 342              		.cfi_restore 4
 343              		.cfi_restore 14
 218:src/hybrid_mode.c ****     }
 219:src/hybrid_mode.c ****     else
 220:src/hybrid_mode.c ****     {
 221:src/hybrid_mode.c ****         hybrid_state.driving_mode = BRAKE_MODE;
 344              		.loc 1 221 0
 345 002a 044B     		ldr	r3, .L36+4
 346 002c 0822     		movs	r2, #8
 347 002e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 11


 222:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = 100u;
 348              		.loc 1 222 0
 349 0030 6422     		movs	r2, #100
 350 0032 5A70     		strb	r2, [r3, #1]
 223:src/hybrid_mode.c ****     }
 224:src/hybrid_mode.c **** }
 351              		.loc 1 224 0
 352 0034 7047     		bx	lr
 353              	.L37:
 354 0036 00BF     		.align	2
 355              	.L36:
 356 0038 00000000 		.word	car_state
 357 003c 00000000 		.word	.LANCHOR0
 358              		.cfi_endproc
 359              	.LFE71:
 360              		.size	Set_Strategy_Auto_Always_Regen, .-Set_Strategy_Auto_Always_Regen
 361              		.section	.text.Set_Strategy_Torque_Fill,"ax",%progbits
 362              		.align	2
 363              		.global	Set_Strategy_Torque_Fill
 364              		.thumb
 365              		.thumb_func
 366              		.type	Set_Strategy_Torque_Fill, %function
 367              	Set_Strategy_Torque_Fill:
 368              	.LFB72:
 225:src/hybrid_mode.c **** 
 226:src/hybrid_mode.c **** /*
 227:src/hybrid_mode.c ****  * Function:    Set_Strategy_Torque_Fill
 228:src/hybrid_mode.c ****  * Description: Provides full torque when:
 229:src/hybrid_mode.c ****  *              - TPS > 50
 230:src/hybrid_mode.c ****  *              - RPM ∈ [2000, 8000]
 231:src/hybrid_mode.c ****  *              - Brake is not pressed
 232:src/hybrid_mode.c ****  *              Applies regenerative braking when brake is pressed.
 233:src/hybrid_mode.c ****  *              Falls back to Freewheel otherwise.
 234:src/hybrid_mode.c ****  */
 235:src/hybrid_mode.c **** void Set_Strategy_Torque_Fill()
 236:src/hybrid_mode.c **** {
 369              		.loc 1 236 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 08B5     		push	{r3, lr}
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 3, -8
 376              		.cfi_offset 14, -4
 237:src/hybrid_mode.c ****     if ((car_state.brake_state == STD_OFF) && (car_state.tps > 50) && (car_state.rpm >= 2000) && (c
 377              		.loc 1 237 0
 378 0002 154B     		ldr	r3, .L43
 379 0004 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 380 0006 13F0FF0F 		tst	r3, #255
 381 000a 16D1     		bne	.L39
 382              		.loc 1 237 0 is_stmt 0 discriminator 1
 383 000c 124B     		ldr	r3, .L43
 384 000e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 385 0010 DBB2     		uxtb	r3, r3
 386 0012 322B     		cmp	r3, #50
 387 0014 11D9     		bls	.L39
 388              		.loc 1 237 0 discriminator 2
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 12


 389 0016 104B     		ldr	r3, .L43
 390 0018 5B88     		ldrh	r3, [r3, #2]
 391 001a 9BB2     		uxth	r3, r3
 392 001c B3F5FA6F 		cmp	r3, #2000
 393 0020 0BD3     		bcc	.L39
 394              		.loc 1 237 0 discriminator 3
 395 0022 0D4B     		ldr	r3, .L43
 396 0024 5B88     		ldrh	r3, [r3, #2]
 397 0026 9BB2     		uxth	r3, r3
 398 0028 B3F5FA5F 		cmp	r3, #8000
 399 002c 05D8     		bhi	.L39
 238:src/hybrid_mode.c ****     {
 239:src/hybrid_mode.c ****         hybrid_state.driving_mode = TORQUE_MODE;
 400              		.loc 1 239 0 is_stmt 1
 401 002e 0B4B     		ldr	r3, .L43+4
 402 0030 0222     		movs	r2, #2
 403 0032 1A70     		strb	r2, [r3]
 240:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = 100u;
 404              		.loc 1 240 0
 405 0034 6422     		movs	r2, #100
 406 0036 5A70     		strb	r2, [r3, #1]
 407 0038 08BD     		pop	{r3, pc}
 408              	.L39:
 241:src/hybrid_mode.c ****     }
 242:src/hybrid_mode.c ****     else if (car_state.brake_state == STD_ON)
 409              		.loc 1 242 0
 410 003a 074B     		ldr	r3, .L43
 411 003c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 412 003e DBB2     		uxtb	r3, r3
 413 0040 012B     		cmp	r3, #1
 414 0042 05D1     		bne	.L41
 243:src/hybrid_mode.c ****     {
 244:src/hybrid_mode.c ****         hybrid_state.driving_mode = BRAKE_MODE;
 415              		.loc 1 244 0
 416 0044 054B     		ldr	r3, .L43+4
 417 0046 0822     		movs	r2, #8
 418 0048 1A70     		strb	r2, [r3]
 245:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = 100u;
 419              		.loc 1 245 0
 420 004a 6422     		movs	r2, #100
 421 004c 5A70     		strb	r2, [r3, #1]
 422 004e 08BD     		pop	{r3, pc}
 423              	.L41:
 246:src/hybrid_mode.c ****     }
 247:src/hybrid_mode.c ****     else
 248:src/hybrid_mode.c ****         Set_Strategy_Freewheel();
 424              		.loc 1 248 0
 425 0050 FFF7FEFF 		bl	Set_Strategy_Freewheel
 426              	.LVL12:
 427 0054 08BD     		pop	{r3, pc}
 428              	.L44:
 429 0056 00BF     		.align	2
 430              	.L43:
 431 0058 00000000 		.word	car_state
 432 005c 00000000 		.word	.LANCHOR0
 433              		.cfi_endproc
 434              	.LFE72:
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 13


 435              		.size	Set_Strategy_Torque_Fill, .-Set_Strategy_Torque_Fill
 436              		.section	.text.Set_Strategy,"ax",%progbits
 437              		.align	2
 438              		.global	Set_Strategy
 439              		.thumb
 440              		.thumb_func
 441              		.type	Set_Strategy, %function
 442              	Set_Strategy:
 443              	.LFB65:
  84:src/hybrid_mode.c ****     if ((car_state.gear == NEUTRAL_GEAR) || (car_state.vss <= MIN_VSS_TO_DEPLOY) || (car_state.vss 
 444              		.loc 1 84 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              	.LVL13:
 449 0000 10B5     		push	{r4, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
  85:src/hybrid_mode.c ****         Set_Strategy_Freewheel();
 453              		.loc 1 85 0
 454 0002 234B     		ldr	r3, .L59
 455 0004 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 456 0006 13F0FF0F 		tst	r3, #255
 457 000a 0AD0     		beq	.L46
 458 000c 0446     		mov	r4, r0
  85:src/hybrid_mode.c ****         Set_Strategy_Freewheel();
 459              		.loc 1 85 0 is_stmt 0 discriminator 1
 460 000e 204B     		ldr	r3, .L59
 461 0010 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 462 0012 DBB2     		uxtb	r3, r3
 463 0014 052B     		cmp	r3, #5
 464 0016 04D9     		bls	.L46
  85:src/hybrid_mode.c ****         Set_Strategy_Freewheel();
 465              		.loc 1 85 0 discriminator 2
 466 0018 1D4B     		ldr	r3, .L59
 467 001a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 468 001c DBB2     		uxtb	r3, r3
 469 001e 5A2B     		cmp	r3, #90
 470 0020 02D9     		bls	.L47
 471              	.L46:
  86:src/hybrid_mode.c ****     else if ((Read_Boost_Button() == STD_ON) && (car_state.brake_state == STD_OFF) && (sel_strategy
 472              		.loc 1 86 0 is_stmt 1
 473 0022 FFF7FEFF 		bl	Set_Strategy_Freewheel
 474              	.LVL14:
 475 0026 2BE0     		b	.L48
 476              	.LVL15:
 477              	.L47:
  87:src/hybrid_mode.c ****     {
 478              		.loc 1 87 0
 479 0028 FFF7FEFF 		bl	Read_Boost_Button
 480              	.LVL16:
 481 002c 0128     		cmp	r0, #1
 482 002e 0BD1     		bne	.L49
  87:src/hybrid_mode.c ****     {
 483              		.loc 1 87 0 is_stmt 0 discriminator 1
 484 0030 174B     		ldr	r3, .L59
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 14


 485 0032 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 486 0034 13F0FF0F 		tst	r3, #255
 487 0038 06D1     		bne	.L49
  87:src/hybrid_mode.c ****     {
 488              		.loc 1 87 0 discriminator 2
 489 003a 2CB1     		cbz	r4, .L49
  89:src/hybrid_mode.c ****         hybrid_state.duty_cycle_percentage = 100;
 490              		.loc 1 89 0 is_stmt 1
 491 003c 154B     		ldr	r3, .L59+4
 492 003e 0222     		movs	r2, #2
 493 0040 1A70     		strb	r2, [r3]
  90:src/hybrid_mode.c ****     }
 494              		.loc 1 90 0
 495 0042 6422     		movs	r2, #100
 496 0044 5A70     		strb	r2, [r3, #1]
 497 0046 1BE0     		b	.L48
 498              	.L49:
  93:src/hybrid_mode.c ****         {
 499              		.loc 1 93 0
 500 0048 013C     		subs	r4, r4, #1
 501 004a 052C     		cmp	r4, #5
 502 004c 16D8     		bhi	.L50
 503 004e DFE804F0 		tbb	[pc, r4]
 504              	.L52:
 505 0052 03       		.byte	(.L51-.L52)/2
 506 0053 06       		.byte	(.L53-.L52)/2
 507 0054 09       		.byte	(.L54-.L52)/2
 508 0055 0C       		.byte	(.L55-.L52)/2
 509 0056 0F       		.byte	(.L56-.L52)/2
 510 0057 12       		.byte	(.L57-.L52)/2
 511              		.p2align 1
 512              	.L51:
  96:src/hybrid_mode.c ****                 break;
 513              		.loc 1 96 0
 514 0058 FFF7FEFF 		bl	Set_Strategy_Manual
 515              	.LVL17:
  97:src/hybrid_mode.c **** 
 516              		.loc 1 97 0
 517 005c 10E0     		b	.L48
 518              	.L53:
 100:src/hybrid_mode.c ****                 break;
 519              		.loc 1 100 0
 520 005e FFF7FEFF 		bl	Set_Strategy_Launch_Assist
 521              	.LVL18:
 101:src/hybrid_mode.c **** 
 522              		.loc 1 101 0
 523 0062 0DE0     		b	.L48
 524              	.L54:
 104:src/hybrid_mode.c ****                 break;
 525              		.loc 1 104 0
 526 0064 FFF7FEFF 		bl	Set_Strategy_Auto_No_Regen
 527              	.LVL19:
 105:src/hybrid_mode.c **** 
 528              		.loc 1 105 0
 529 0068 0AE0     		b	.L48
 530              	.L55:
 108:src/hybrid_mode.c ****                 break;
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 15


 531              		.loc 1 108 0
 532 006a FFF7FEFF 		bl	Set_Strategy_Auto_Brake_Regen
 533              	.LVL20:
 109:src/hybrid_mode.c **** 
 534              		.loc 1 109 0
 535 006e 07E0     		b	.L48
 536              	.L56:
 112:src/hybrid_mode.c ****                 break;
 537              		.loc 1 112 0
 538 0070 FFF7FEFF 		bl	Set_Strategy_Auto_Always_Regen
 539              	.LVL21:
 113:src/hybrid_mode.c **** 
 540              		.loc 1 113 0
 541 0074 04E0     		b	.L48
 542              	.L57:
 116:src/hybrid_mode.c ****                 break;
 543              		.loc 1 116 0
 544 0076 FFF7FEFF 		bl	Set_Strategy_Torque_Fill
 545              	.LVL22:
 117:src/hybrid_mode.c **** 
 546              		.loc 1 117 0
 547 007a 01E0     		b	.L48
 548              	.L50:
 120:src/hybrid_mode.c ****         }
 549              		.loc 1 120 0
 550 007c FFF7FEFF 		bl	Set_Strategy_Freewheel
 551              	.LVL23:
 552              	.L48:
 123:src/hybrid_mode.c **** }
 553              		.loc 1 123 0
 554 0080 044B     		ldr	r3, .L59+4
 555 0082 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 556 0084 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 557 0086 49B2     		sxtb	r1, r1
 558 0088 FFF7FEFF 		bl	CAN_Transmit_To_ESC
 559              	.LVL24:
 560 008c 10BD     		pop	{r4, pc}
 561              	.L60:
 562 008e 00BF     		.align	2
 563              	.L59:
 564 0090 00000000 		.word	car_state
 565 0094 00000000 		.word	.LANCHOR0
 566              		.cfi_endproc
 567              	.LFE65:
 568              		.size	Set_Strategy, .-Set_Strategy
 569              		.global	hybrid_state
 570              		.bss
 571              		.align	2
 572              		.set	.LANCHOR0,. + 0
 573              		.type	hybrid_state, %object
 574              		.size	hybrid_state, 2
 575              	hybrid_state:
 576 0000 0000     		.space	2
 577              		.text
 578              	.Letext0:
 579              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 580              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 16


 581              		.file 4 "./include/can_comm.h"
 582              		.file 5 "./include/hybrid_mode.h"
 583              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 584              		.file 7 "./include/user_input.h"
 585              		.section	.debug_info,"",%progbits
 586              	.Ldebug_info0:
 587 0000 73030000 		.4byte	0x373
 588 0004 0400     		.2byte	0x4
 589 0006 00000000 		.4byte	.Ldebug_abbrev0
 590 000a 04       		.byte	0x4
 591 000b 01       		.uleb128 0x1
 592 000c 32010000 		.4byte	.LASF46
 593 0010 0C       		.byte	0xc
 594 0011 41030000 		.4byte	.LASF47
 595 0015 78000000 		.4byte	.LASF48
 596 0019 00000000 		.4byte	.Ldebug_ranges0+0
 597 001d 00000000 		.4byte	0
 598 0021 00000000 		.4byte	.Ldebug_line0
 599 0025 02       		.uleb128 0x2
 600 0026 36000000 		.4byte	.LASF0
 601 002a 02       		.byte	0x2
 602 002b 1B       		.byte	0x1b
 603 002c 30000000 		.4byte	0x30
 604 0030 03       		.uleb128 0x3
 605 0031 01       		.byte	0x1
 606 0032 06       		.byte	0x6
 607 0033 0A010000 		.4byte	.LASF2
 608 0037 02       		.uleb128 0x2
 609 0038 3F000000 		.4byte	.LASF1
 610 003c 02       		.byte	0x2
 611 003d 1D       		.byte	0x1d
 612 003e 42000000 		.4byte	0x42
 613 0042 03       		.uleb128 0x3
 614 0043 01       		.byte	0x1
 615 0044 08       		.byte	0x8
 616 0045 24010000 		.4byte	.LASF3
 617 0049 02       		.uleb128 0x2
 618 004a 64000000 		.4byte	.LASF4
 619 004e 02       		.byte	0x2
 620 004f 29       		.byte	0x29
 621 0050 54000000 		.4byte	0x54
 622 0054 03       		.uleb128 0x3
 623 0055 02       		.byte	0x2
 624 0056 05       		.byte	0x5
 625 0057 23020000 		.4byte	.LASF5
 626 005b 02       		.uleb128 0x2
 627 005c 11020000 		.4byte	.LASF6
 628 0060 02       		.byte	0x2
 629 0061 2B       		.byte	0x2b
 630 0062 66000000 		.4byte	0x66
 631 0066 03       		.uleb128 0x3
 632 0067 02       		.byte	0x2
 633 0068 07       		.byte	0x7
 634 0069 D2010000 		.4byte	.LASF7
 635 006d 02       		.uleb128 0x2
 636 006e 6E000000 		.4byte	.LASF8
 637 0072 02       		.byte	0x2
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 17


 638 0073 3F       		.byte	0x3f
 639 0074 78000000 		.4byte	0x78
 640 0078 03       		.uleb128 0x3
 641 0079 04       		.byte	0x4
 642 007a 05       		.byte	0x5
 643 007b 38030000 		.4byte	.LASF9
 644 007f 03       		.uleb128 0x3
 645 0080 04       		.byte	0x4
 646 0081 07       		.byte	0x7
 647 0082 C0010000 		.4byte	.LASF10
 648 0086 03       		.uleb128 0x3
 649 0087 08       		.byte	0x8
 650 0088 05       		.byte	0x5
 651 0089 00000000 		.4byte	.LASF11
 652 008d 03       		.uleb128 0x3
 653 008e 08       		.byte	0x8
 654 008f 07       		.byte	0x7
 655 0090 71020000 		.4byte	.LASF12
 656 0094 04       		.uleb128 0x4
 657 0095 04       		.byte	0x4
 658 0096 05       		.byte	0x5
 659 0097 696E7400 		.ascii	"int\000"
 660 009b 03       		.uleb128 0x3
 661 009c 04       		.byte	0x4
 662 009d 07       		.byte	0x7
 663 009e 3A020000 		.4byte	.LASF13
 664 00a2 02       		.uleb128 0x2
 665 00a3 F5000000 		.4byte	.LASF14
 666 00a7 03       		.byte	0x3
 667 00a8 14       		.byte	0x14
 668 00a9 25000000 		.4byte	0x25
 669 00ad 02       		.uleb128 0x2
 670 00ae 88020000 		.4byte	.LASF15
 671 00b2 03       		.byte	0x3
 672 00b3 18       		.byte	0x18
 673 00b4 37000000 		.4byte	0x37
 674 00b8 02       		.uleb128 0x2
 675 00b9 A4020000 		.4byte	.LASF16
 676 00bd 03       		.byte	0x3
 677 00be 20       		.byte	0x20
 678 00bf 49000000 		.4byte	0x49
 679 00c3 02       		.uleb128 0x2
 680 00c4 22030000 		.4byte	.LASF17
 681 00c8 03       		.byte	0x3
 682 00c9 24       		.byte	0x24
 683 00ca 5B000000 		.4byte	0x5b
 684 00ce 02       		.uleb128 0x2
 685 00cf FC000000 		.4byte	.LASF18
 686 00d3 03       		.byte	0x3
 687 00d4 2C       		.byte	0x2c
 688 00d5 6D000000 		.4byte	0x6d
 689 00d9 03       		.uleb128 0x3
 690 00da 04       		.byte	0x4
 691 00db 04       		.byte	0x4
 692 00dc 04010000 		.4byte	.LASF19
 693 00e0 03       		.uleb128 0x3
 694 00e1 08       		.byte	0x8
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 18


 695 00e2 04       		.byte	0x4
 696 00e3 1C020000 		.4byte	.LASF20
 697 00e7 03       		.uleb128 0x3
 698 00e8 01       		.byte	0x1
 699 00e9 08       		.byte	0x8
 700 00ea 10030000 		.4byte	.LASF21
 701 00ee 03       		.uleb128 0x3
 702 00ef 08       		.byte	0x8
 703 00f0 04       		.byte	0x4
 704 00f1 C9020000 		.4byte	.LASF22
 705 00f5 03       		.uleb128 0x3
 706 00f6 04       		.byte	0x4
 707 00f7 07       		.byte	0x7
 708 00f8 D5020000 		.4byte	.LASF23
 709 00fc 05       		.uleb128 0x5
 710 00fd 08       		.byte	0x8
 711 00fe 04       		.byte	0x4
 712 00ff 23       		.byte	0x23
 713 0100 4D010000 		.4byte	0x14d
 714 0104 06       		.uleb128 0x6
 715 0105 6C030000 		.4byte	.LASF24
 716 0109 04       		.byte	0x4
 717 010a 24       		.byte	0x24
 718 010b AD000000 		.4byte	0xad
 719 010f 00       		.byte	0
 720 0110 07       		.uleb128 0x7
 721 0111 72706D00 		.ascii	"rpm\000"
 722 0115 04       		.byte	0x4
 723 0116 25       		.byte	0x25
 724 0117 C3000000 		.4byte	0xc3
 725 011b 02       		.byte	0x2
 726 011c 07       		.uleb128 0x7
 727 011d 74707300 		.ascii	"tps\000"
 728 0121 04       		.byte	0x4
 729 0122 26       		.byte	0x26
 730 0123 AD000000 		.4byte	0xad
 731 0127 04       		.byte	0x4
 732 0128 07       		.uleb128 0x7
 733 0129 76737300 		.ascii	"vss\000"
 734 012d 04       		.byte	0x4
 735 012e 27       		.byte	0x27
 736 012f AD000000 		.4byte	0xad
 737 0133 05       		.byte	0x5
 738 0134 06       		.uleb128 0x6
 739 0135 58000000 		.4byte	.LASF25
 740 0139 04       		.byte	0x4
 741 013a 28       		.byte	0x28
 742 013b AD000000 		.4byte	0xad
 743 013f 06       		.byte	0x6
 744 0140 06       		.uleb128 0x6
 745 0141 F0000000 		.4byte	.LASF26
 746 0145 04       		.byte	0x4
 747 0146 29       		.byte	0x29
 748 0147 AD000000 		.4byte	0xad
 749 014b 07       		.byte	0x7
 750 014c 00       		.byte	0
 751 014d 02       		.uleb128 0x2
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 19


 752 014e 79030000 		.4byte	.LASF27
 753 0152 04       		.byte	0x4
 754 0153 2A       		.byte	0x2a
 755 0154 FC000000 		.4byte	0xfc
 756 0158 05       		.uleb128 0x5
 757 0159 02       		.byte	0x2
 758 015a 05       		.byte	0x5
 759 015b 24       		.byte	0x24
 760 015c 79010000 		.4byte	0x179
 761 0160 06       		.uleb128 0x6
 762 0161 04020000 		.4byte	.LASF28
 763 0165 05       		.byte	0x5
 764 0166 25       		.byte	0x25
 765 0167 AD000000 		.4byte	0xad
 766 016b 00       		.byte	0
 767 016c 06       		.uleb128 0x6
 768 016d DA000000 		.4byte	.LASF29
 769 0171 05       		.byte	0x5
 770 0172 26       		.byte	0x26
 771 0173 A2000000 		.4byte	0xa2
 772 0177 01       		.byte	0x1
 773 0178 00       		.byte	0
 774 0179 02       		.uleb128 0x2
 775 017a 16010000 		.4byte	.LASF30
 776 017e 05       		.byte	0x5
 777 017f 27       		.byte	0x27
 778 0180 58010000 		.4byte	0x158
 779 0184 08       		.uleb128 0x8
 780 0185 AC020000 		.4byte	.LASF31
 781 0189 01       		.byte	0x1
 782 018a 2E       		.byte	0x2e
 783 018b AD000000 		.4byte	0xad
 784 018f 00000000 		.4byte	.LFB63
 785 0193 10000000 		.4byte	.LFE63-.LFB63
 786 0197 01       		.uleb128 0x1
 787 0198 9C       		.byte	0x9c
 788 0199 AD010000 		.4byte	0x1ad
 789 019d 09       		.uleb128 0x9
 790 019e 47020000 		.4byte	.LASF33
 791 01a2 01       		.byte	0x1
 792 01a3 2E       		.byte	0x2e
 793 01a4 AD000000 		.4byte	0xad
 794 01a8 00000000 		.4byte	.LLST0
 795 01ac 00       		.byte	0
 796 01ad 08       		.uleb128 0x8
 797 01ae 49000000 		.4byte	.LASF32
 798 01b2 01       		.byte	0x1
 799 01b3 3E       		.byte	0x3e
 800 01b4 B8000000 		.4byte	0xb8
 801 01b8 00000000 		.4byte	.LFB64
 802 01bc 14000000 		.4byte	.LFE64-.LFB64
 803 01c0 01       		.uleb128 0x1
 804 01c1 9C       		.byte	0x9c
 805 01c2 D6010000 		.4byte	0x1d6
 806 01c6 09       		.uleb128 0x9
 807 01c7 DA000000 		.4byte	.LASF29
 808 01cb 01       		.byte	0x1
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 20


 809 01cc 3E       		.byte	0x3e
 810 01cd A2000000 		.4byte	0xa2
 811 01d1 3A000000 		.4byte	.LLST1
 812 01d5 00       		.byte	0
 813 01d6 0A       		.uleb128 0xa
 814 01d7 C3000000 		.4byte	.LASF49
 815 01db 01       		.byte	0x1
 816 01dc 82       		.byte	0x82
 817 01dd 00000000 		.4byte	.LFB66
 818 01e1 10000000 		.4byte	.LFE66-.LFB66
 819 01e5 01       		.uleb128 0x1
 820 01e6 9C       		.byte	0x9c
 821 01e7 0B       		.uleb128 0xb
 822 01e8 DE020000 		.4byte	.LASF34
 823 01ec 01       		.byte	0x1
 824 01ed 8D       		.byte	0x8d
 825 01ee 00000000 		.4byte	.LFB67
 826 01f2 08000000 		.4byte	.LFE67-.LFB67
 827 01f6 01       		.uleb128 0x1
 828 01f7 9C       		.byte	0x9c
 829 01f8 06020000 		.4byte	0x206
 830 01fc 0C       		.uleb128 0xc
 831 01fd 06000000 		.4byte	.LVL6
 832 0201 D6010000 		.4byte	0x1d6
 833 0205 00       		.byte	0
 834 0206 0B       		.uleb128 0xb
 835 0207 1B000000 		.4byte	.LASF35
 836 020b 01       		.byte	0x1
 837 020c A0       		.byte	0xa0
 838 020d 00000000 		.4byte	.LFB68
 839 0211 54000000 		.4byte	.LFE68-.LFB68
 840 0215 01       		.uleb128 0x1
 841 0216 9C       		.byte	0x9c
 842 0217 25020000 		.4byte	0x225
 843 021b 0C       		.uleb128 0xc
 844 021c 48000000 		.4byte	.LVL7
 845 0220 D6010000 		.4byte	0x1d6
 846 0224 00       		.byte	0
 847 0225 0B       		.uleb128 0xb
 848 0226 56020000 		.4byte	.LASF36
 849 022a 01       		.byte	0x1
 850 022b B1       		.byte	0xb1
 851 022c 00000000 		.4byte	.LFB69
 852 0230 30000000 		.4byte	.LFE69-.LFB69
 853 0234 01       		.uleb128 0x1
 854 0235 9C       		.byte	0x9c
 855 0236 4D020000 		.4byte	0x24d
 856 023a 0C       		.uleb128 0xc
 857 023b 1A000000 		.4byte	.LVL8
 858 023f 84010000 		.4byte	0x184
 859 0243 0C       		.uleb128 0xc
 860 0244 24000000 		.4byte	.LVL9
 861 0248 D6010000 		.4byte	0x1d6
 862 024c 00       		.byte	0
 863 024d 0B       		.uleb128 0xb
 864 024e F2020000 		.4byte	.LASF37
 865 0252 01       		.byte	0x1
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 21


 866 0253 C1       		.byte	0xc1
 867 0254 00000000 		.4byte	.LFB70
 868 0258 34000000 		.4byte	.LFE70-.LFB70
 869 025c 01       		.uleb128 0x1
 870 025d 9C       		.byte	0x9c
 871 025e 6C020000 		.4byte	0x26c
 872 0262 0C       		.uleb128 0xc
 873 0263 1A000000 		.4byte	.LVL10
 874 0267 84010000 		.4byte	0x184
 875 026b 00       		.byte	0
 876 026c 0B       		.uleb128 0xb
 877 026d E5010000 		.4byte	.LASF38
 878 0271 01       		.byte	0x1
 879 0272 D4       		.byte	0xd4
 880 0273 00000000 		.4byte	.LFB71
 881 0277 40000000 		.4byte	.LFE71-.LFB71
 882 027b 01       		.uleb128 0x1
 883 027c 9C       		.byte	0x9c
 884 027d 8B020000 		.4byte	0x28b
 885 0281 0C       		.uleb128 0xc
 886 0282 24000000 		.4byte	.LVL11
 887 0286 84010000 		.4byte	0x184
 888 028a 00       		.byte	0
 889 028b 0B       		.uleb128 0xb
 890 028c 53030000 		.4byte	.LASF39
 891 0290 01       		.byte	0x1
 892 0291 EB       		.byte	0xeb
 893 0292 00000000 		.4byte	.LFB72
 894 0296 60000000 		.4byte	.LFE72-.LFB72
 895 029a 01       		.uleb128 0x1
 896 029b 9C       		.byte	0x9c
 897 029c AA020000 		.4byte	0x2aa
 898 02a0 0C       		.uleb128 0xc
 899 02a1 54000000 		.4byte	.LVL12
 900 02a5 D6010000 		.4byte	0x1d6
 901 02a9 00       		.byte	0
 902 02aa 0D       		.uleb128 0xd
 903 02ab 15030000 		.4byte	.LASF50
 904 02af 01       		.byte	0x1
 905 02b0 53       		.byte	0x53
 906 02b1 00000000 		.4byte	.LFB65
 907 02b5 98000000 		.4byte	.LFE65-.LFB65
 908 02b9 01       		.uleb128 0x1
 909 02ba 9C       		.byte	0x9c
 910 02bb 29030000 		.4byte	0x329
 911 02bf 09       		.uleb128 0x9
 912 02c0 0E000000 		.4byte	.LASF40
 913 02c4 01       		.byte	0x1
 914 02c5 53       		.byte	0x53
 915 02c6 AD000000 		.4byte	0xad
 916 02ca 5B000000 		.4byte	.LLST2
 917 02ce 0C       		.uleb128 0xc
 918 02cf 26000000 		.4byte	.LVL14
 919 02d3 D6010000 		.4byte	0x1d6
 920 02d7 0C       		.uleb128 0xc
 921 02d8 2C000000 		.4byte	.LVL16
 922 02dc 60030000 		.4byte	0x360
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 22


 923 02e0 0C       		.uleb128 0xc
 924 02e1 5C000000 		.4byte	.LVL17
 925 02e5 E7010000 		.4byte	0x1e7
 926 02e9 0C       		.uleb128 0xc
 927 02ea 62000000 		.4byte	.LVL18
 928 02ee 06020000 		.4byte	0x206
 929 02f2 0C       		.uleb128 0xc
 930 02f3 68000000 		.4byte	.LVL19
 931 02f7 25020000 		.4byte	0x225
 932 02fb 0C       		.uleb128 0xc
 933 02fc 6E000000 		.4byte	.LVL20
 934 0300 4D020000 		.4byte	0x24d
 935 0304 0C       		.uleb128 0xc
 936 0305 74000000 		.4byte	.LVL21
 937 0309 6C020000 		.4byte	0x26c
 938 030d 0C       		.uleb128 0xc
 939 030e 7A000000 		.4byte	.LVL22
 940 0312 8B020000 		.4byte	0x28b
 941 0316 0C       		.uleb128 0xc
 942 0317 80000000 		.4byte	.LVL23
 943 031b D6010000 		.4byte	0x1d6
 944 031f 0C       		.uleb128 0xc
 945 0320 8C000000 		.4byte	.LVL24
 946 0324 6B030000 		.4byte	0x36b
 947 0328 00       		.byte	0
 948 0329 0E       		.uleb128 0xe
 949 032a 2D020000 		.4byte	.LASF41
 950 032e 06       		.byte	0x6
 951 032f 1207     		.2byte	0x712
 952 0331 35030000 		.4byte	0x335
 953 0335 0F       		.uleb128 0xf
 954 0336 CE000000 		.4byte	0xce
 955 033a 10       		.uleb128 0x10
 956 033b B9000000 		.4byte	.LASF42
 957 033f 04       		.byte	0x4
 958 0340 30       		.byte	0x30
 959 0341 45030000 		.4byte	0x345
 960 0345 0F       		.uleb128 0xf
 961 0346 4D010000 		.4byte	0x14d
 962 034a 11       		.uleb128 0x11
 963 034b 2B030000 		.4byte	.LASF43
 964 034f 01       		.byte	0x1
 965 0350 20       		.byte	0x20
 966 0351 5B030000 		.4byte	0x35b
 967 0355 05       		.uleb128 0x5
 968 0356 03       		.byte	0x3
 969 0357 00000000 		.4byte	hybrid_state
 970 035b 0F       		.uleb128 0xf
 971 035c 79010000 		.4byte	0x179
 972 0360 12       		.uleb128 0x12
 973 0361 8A030000 		.4byte	.LASF44
 974 0365 8A030000 		.4byte	.LASF44
 975 0369 07       		.byte	0x7
 976 036a 19       		.byte	0x19
 977 036b 12       		.uleb128 0x12
 978 036c 90020000 		.4byte	.LASF45
 979 0370 90020000 		.4byte	.LASF45
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 23


 980 0374 04       		.byte	0x4
 981 0375 35       		.byte	0x35
 982 0376 00       		.byte	0
 983              		.section	.debug_abbrev,"",%progbits
 984              	.Ldebug_abbrev0:
 985 0000 01       		.uleb128 0x1
 986 0001 11       		.uleb128 0x11
 987 0002 01       		.byte	0x1
 988 0003 25       		.uleb128 0x25
 989 0004 0E       		.uleb128 0xe
 990 0005 13       		.uleb128 0x13
 991 0006 0B       		.uleb128 0xb
 992 0007 03       		.uleb128 0x3
 993 0008 0E       		.uleb128 0xe
 994 0009 1B       		.uleb128 0x1b
 995 000a 0E       		.uleb128 0xe
 996 000b 55       		.uleb128 0x55
 997 000c 17       		.uleb128 0x17
 998 000d 11       		.uleb128 0x11
 999 000e 01       		.uleb128 0x1
 1000 000f 10       		.uleb128 0x10
 1001 0010 17       		.uleb128 0x17
 1002 0011 00       		.byte	0
 1003 0012 00       		.byte	0
 1004 0013 02       		.uleb128 0x2
 1005 0014 16       		.uleb128 0x16
 1006 0015 00       		.byte	0
 1007 0016 03       		.uleb128 0x3
 1008 0017 0E       		.uleb128 0xe
 1009 0018 3A       		.uleb128 0x3a
 1010 0019 0B       		.uleb128 0xb
 1011 001a 3B       		.uleb128 0x3b
 1012 001b 0B       		.uleb128 0xb
 1013 001c 49       		.uleb128 0x49
 1014 001d 13       		.uleb128 0x13
 1015 001e 00       		.byte	0
 1016 001f 00       		.byte	0
 1017 0020 03       		.uleb128 0x3
 1018 0021 24       		.uleb128 0x24
 1019 0022 00       		.byte	0
 1020 0023 0B       		.uleb128 0xb
 1021 0024 0B       		.uleb128 0xb
 1022 0025 3E       		.uleb128 0x3e
 1023 0026 0B       		.uleb128 0xb
 1024 0027 03       		.uleb128 0x3
 1025 0028 0E       		.uleb128 0xe
 1026 0029 00       		.byte	0
 1027 002a 00       		.byte	0
 1028 002b 04       		.uleb128 0x4
 1029 002c 24       		.uleb128 0x24
 1030 002d 00       		.byte	0
 1031 002e 0B       		.uleb128 0xb
 1032 002f 0B       		.uleb128 0xb
 1033 0030 3E       		.uleb128 0x3e
 1034 0031 0B       		.uleb128 0xb
 1035 0032 03       		.uleb128 0x3
 1036 0033 08       		.uleb128 0x8
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 24


 1037 0034 00       		.byte	0
 1038 0035 00       		.byte	0
 1039 0036 05       		.uleb128 0x5
 1040 0037 13       		.uleb128 0x13
 1041 0038 01       		.byte	0x1
 1042 0039 0B       		.uleb128 0xb
 1043 003a 0B       		.uleb128 0xb
 1044 003b 3A       		.uleb128 0x3a
 1045 003c 0B       		.uleb128 0xb
 1046 003d 3B       		.uleb128 0x3b
 1047 003e 0B       		.uleb128 0xb
 1048 003f 01       		.uleb128 0x1
 1049 0040 13       		.uleb128 0x13
 1050 0041 00       		.byte	0
 1051 0042 00       		.byte	0
 1052 0043 06       		.uleb128 0x6
 1053 0044 0D       		.uleb128 0xd
 1054 0045 00       		.byte	0
 1055 0046 03       		.uleb128 0x3
 1056 0047 0E       		.uleb128 0xe
 1057 0048 3A       		.uleb128 0x3a
 1058 0049 0B       		.uleb128 0xb
 1059 004a 3B       		.uleb128 0x3b
 1060 004b 0B       		.uleb128 0xb
 1061 004c 49       		.uleb128 0x49
 1062 004d 13       		.uleb128 0x13
 1063 004e 38       		.uleb128 0x38
 1064 004f 0B       		.uleb128 0xb
 1065 0050 00       		.byte	0
 1066 0051 00       		.byte	0
 1067 0052 07       		.uleb128 0x7
 1068 0053 0D       		.uleb128 0xd
 1069 0054 00       		.byte	0
 1070 0055 03       		.uleb128 0x3
 1071 0056 08       		.uleb128 0x8
 1072 0057 3A       		.uleb128 0x3a
 1073 0058 0B       		.uleb128 0xb
 1074 0059 3B       		.uleb128 0x3b
 1075 005a 0B       		.uleb128 0xb
 1076 005b 49       		.uleb128 0x49
 1077 005c 13       		.uleb128 0x13
 1078 005d 38       		.uleb128 0x38
 1079 005e 0B       		.uleb128 0xb
 1080 005f 00       		.byte	0
 1081 0060 00       		.byte	0
 1082 0061 08       		.uleb128 0x8
 1083 0062 2E       		.uleb128 0x2e
 1084 0063 01       		.byte	0x1
 1085 0064 3F       		.uleb128 0x3f
 1086 0065 19       		.uleb128 0x19
 1087 0066 03       		.uleb128 0x3
 1088 0067 0E       		.uleb128 0xe
 1089 0068 3A       		.uleb128 0x3a
 1090 0069 0B       		.uleb128 0xb
 1091 006a 3B       		.uleb128 0x3b
 1092 006b 0B       		.uleb128 0xb
 1093 006c 27       		.uleb128 0x27
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 25


 1094 006d 19       		.uleb128 0x19
 1095 006e 49       		.uleb128 0x49
 1096 006f 13       		.uleb128 0x13
 1097 0070 11       		.uleb128 0x11
 1098 0071 01       		.uleb128 0x1
 1099 0072 12       		.uleb128 0x12
 1100 0073 06       		.uleb128 0x6
 1101 0074 40       		.uleb128 0x40
 1102 0075 18       		.uleb128 0x18
 1103 0076 9742     		.uleb128 0x2117
 1104 0078 19       		.uleb128 0x19
 1105 0079 01       		.uleb128 0x1
 1106 007a 13       		.uleb128 0x13
 1107 007b 00       		.byte	0
 1108 007c 00       		.byte	0
 1109 007d 09       		.uleb128 0x9
 1110 007e 05       		.uleb128 0x5
 1111 007f 00       		.byte	0
 1112 0080 03       		.uleb128 0x3
 1113 0081 0E       		.uleb128 0xe
 1114 0082 3A       		.uleb128 0x3a
 1115 0083 0B       		.uleb128 0xb
 1116 0084 3B       		.uleb128 0x3b
 1117 0085 0B       		.uleb128 0xb
 1118 0086 49       		.uleb128 0x49
 1119 0087 13       		.uleb128 0x13
 1120 0088 02       		.uleb128 0x2
 1121 0089 17       		.uleb128 0x17
 1122 008a 00       		.byte	0
 1123 008b 00       		.byte	0
 1124 008c 0A       		.uleb128 0xa
 1125 008d 2E       		.uleb128 0x2e
 1126 008e 00       		.byte	0
 1127 008f 3F       		.uleb128 0x3f
 1128 0090 19       		.uleb128 0x19
 1129 0091 03       		.uleb128 0x3
 1130 0092 0E       		.uleb128 0xe
 1131 0093 3A       		.uleb128 0x3a
 1132 0094 0B       		.uleb128 0xb
 1133 0095 3B       		.uleb128 0x3b
 1134 0096 0B       		.uleb128 0xb
 1135 0097 11       		.uleb128 0x11
 1136 0098 01       		.uleb128 0x1
 1137 0099 12       		.uleb128 0x12
 1138 009a 06       		.uleb128 0x6
 1139 009b 40       		.uleb128 0x40
 1140 009c 18       		.uleb128 0x18
 1141 009d 9742     		.uleb128 0x2117
 1142 009f 19       		.uleb128 0x19
 1143 00a0 00       		.byte	0
 1144 00a1 00       		.byte	0
 1145 00a2 0B       		.uleb128 0xb
 1146 00a3 2E       		.uleb128 0x2e
 1147 00a4 01       		.byte	0x1
 1148 00a5 3F       		.uleb128 0x3f
 1149 00a6 19       		.uleb128 0x19
 1150 00a7 03       		.uleb128 0x3
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 26


 1151 00a8 0E       		.uleb128 0xe
 1152 00a9 3A       		.uleb128 0x3a
 1153 00aa 0B       		.uleb128 0xb
 1154 00ab 3B       		.uleb128 0x3b
 1155 00ac 0B       		.uleb128 0xb
 1156 00ad 11       		.uleb128 0x11
 1157 00ae 01       		.uleb128 0x1
 1158 00af 12       		.uleb128 0x12
 1159 00b0 06       		.uleb128 0x6
 1160 00b1 40       		.uleb128 0x40
 1161 00b2 18       		.uleb128 0x18
 1162 00b3 9742     		.uleb128 0x2117
 1163 00b5 19       		.uleb128 0x19
 1164 00b6 01       		.uleb128 0x1
 1165 00b7 13       		.uleb128 0x13
 1166 00b8 00       		.byte	0
 1167 00b9 00       		.byte	0
 1168 00ba 0C       		.uleb128 0xc
 1169 00bb 898201   		.uleb128 0x4109
 1170 00be 00       		.byte	0
 1171 00bf 11       		.uleb128 0x11
 1172 00c0 01       		.uleb128 0x1
 1173 00c1 31       		.uleb128 0x31
 1174 00c2 13       		.uleb128 0x13
 1175 00c3 00       		.byte	0
 1176 00c4 00       		.byte	0
 1177 00c5 0D       		.uleb128 0xd
 1178 00c6 2E       		.uleb128 0x2e
 1179 00c7 01       		.byte	0x1
 1180 00c8 3F       		.uleb128 0x3f
 1181 00c9 19       		.uleb128 0x19
 1182 00ca 03       		.uleb128 0x3
 1183 00cb 0E       		.uleb128 0xe
 1184 00cc 3A       		.uleb128 0x3a
 1185 00cd 0B       		.uleb128 0xb
 1186 00ce 3B       		.uleb128 0x3b
 1187 00cf 0B       		.uleb128 0xb
 1188 00d0 27       		.uleb128 0x27
 1189 00d1 19       		.uleb128 0x19
 1190 00d2 11       		.uleb128 0x11
 1191 00d3 01       		.uleb128 0x1
 1192 00d4 12       		.uleb128 0x12
 1193 00d5 06       		.uleb128 0x6
 1194 00d6 40       		.uleb128 0x40
 1195 00d7 18       		.uleb128 0x18
 1196 00d8 9742     		.uleb128 0x2117
 1197 00da 19       		.uleb128 0x19
 1198 00db 01       		.uleb128 0x1
 1199 00dc 13       		.uleb128 0x13
 1200 00dd 00       		.byte	0
 1201 00de 00       		.byte	0
 1202 00df 0E       		.uleb128 0xe
 1203 00e0 34       		.uleb128 0x34
 1204 00e1 00       		.byte	0
 1205 00e2 03       		.uleb128 0x3
 1206 00e3 0E       		.uleb128 0xe
 1207 00e4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 27


 1208 00e5 0B       		.uleb128 0xb
 1209 00e6 3B       		.uleb128 0x3b
 1210 00e7 05       		.uleb128 0x5
 1211 00e8 49       		.uleb128 0x49
 1212 00e9 13       		.uleb128 0x13
 1213 00ea 3F       		.uleb128 0x3f
 1214 00eb 19       		.uleb128 0x19
 1215 00ec 3C       		.uleb128 0x3c
 1216 00ed 19       		.uleb128 0x19
 1217 00ee 00       		.byte	0
 1218 00ef 00       		.byte	0
 1219 00f0 0F       		.uleb128 0xf
 1220 00f1 35       		.uleb128 0x35
 1221 00f2 00       		.byte	0
 1222 00f3 49       		.uleb128 0x49
 1223 00f4 13       		.uleb128 0x13
 1224 00f5 00       		.byte	0
 1225 00f6 00       		.byte	0
 1226 00f7 10       		.uleb128 0x10
 1227 00f8 34       		.uleb128 0x34
 1228 00f9 00       		.byte	0
 1229 00fa 03       		.uleb128 0x3
 1230 00fb 0E       		.uleb128 0xe
 1231 00fc 3A       		.uleb128 0x3a
 1232 00fd 0B       		.uleb128 0xb
 1233 00fe 3B       		.uleb128 0x3b
 1234 00ff 0B       		.uleb128 0xb
 1235 0100 49       		.uleb128 0x49
 1236 0101 13       		.uleb128 0x13
 1237 0102 3F       		.uleb128 0x3f
 1238 0103 19       		.uleb128 0x19
 1239 0104 3C       		.uleb128 0x3c
 1240 0105 19       		.uleb128 0x19
 1241 0106 00       		.byte	0
 1242 0107 00       		.byte	0
 1243 0108 11       		.uleb128 0x11
 1244 0109 34       		.uleb128 0x34
 1245 010a 00       		.byte	0
 1246 010b 03       		.uleb128 0x3
 1247 010c 0E       		.uleb128 0xe
 1248 010d 3A       		.uleb128 0x3a
 1249 010e 0B       		.uleb128 0xb
 1250 010f 3B       		.uleb128 0x3b
 1251 0110 0B       		.uleb128 0xb
 1252 0111 49       		.uleb128 0x49
 1253 0112 13       		.uleb128 0x13
 1254 0113 3F       		.uleb128 0x3f
 1255 0114 19       		.uleb128 0x19
 1256 0115 02       		.uleb128 0x2
 1257 0116 18       		.uleb128 0x18
 1258 0117 00       		.byte	0
 1259 0118 00       		.byte	0
 1260 0119 12       		.uleb128 0x12
 1261 011a 2E       		.uleb128 0x2e
 1262 011b 00       		.byte	0
 1263 011c 3F       		.uleb128 0x3f
 1264 011d 19       		.uleb128 0x19
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 28


 1265 011e 3C       		.uleb128 0x3c
 1266 011f 19       		.uleb128 0x19
 1267 0120 6E       		.uleb128 0x6e
 1268 0121 0E       		.uleb128 0xe
 1269 0122 03       		.uleb128 0x3
 1270 0123 0E       		.uleb128 0xe
 1271 0124 3A       		.uleb128 0x3a
 1272 0125 0B       		.uleb128 0xb
 1273 0126 3B       		.uleb128 0x3b
 1274 0127 0B       		.uleb128 0xb
 1275 0128 00       		.byte	0
 1276 0129 00       		.byte	0
 1277 012a 00       		.byte	0
 1278              		.section	.debug_loc,"",%progbits
 1279              	.Ldebug_loc0:
 1280              	.LLST0:
 1281 0000 00000000 		.4byte	.LVL0
 1282 0004 06000000 		.4byte	.LVL1
 1283 0008 0100     		.2byte	0x1
 1284 000a 50       		.byte	0x50
 1285 000b 06000000 		.4byte	.LVL1
 1286 000f 0C000000 		.4byte	.LVL2
 1287 0013 0400     		.2byte	0x4
 1288 0015 F3       		.byte	0xf3
 1289 0016 01       		.uleb128 0x1
 1290 0017 50       		.byte	0x50
 1291 0018 9F       		.byte	0x9f
 1292 0019 0C000000 		.4byte	.LVL2
 1293 001d 0E000000 		.4byte	.LVL3
 1294 0021 0100     		.2byte	0x1
 1295 0023 50       		.byte	0x50
 1296 0024 0E000000 		.4byte	.LVL3
 1297 0028 10000000 		.4byte	.LFE63
 1298 002c 0400     		.2byte	0x4
 1299 002e F3       		.byte	0xf3
 1300 002f 01       		.uleb128 0x1
 1301 0030 50       		.byte	0x50
 1302 0031 9F       		.byte	0x9f
 1303 0032 00000000 		.4byte	0
 1304 0036 00000000 		.4byte	0
 1305              	.LLST1:
 1306 003a 00000000 		.4byte	.LVL4
 1307 003e 04000000 		.4byte	.LVL5
 1308 0042 0100     		.2byte	0x1
 1309 0044 50       		.byte	0x50
 1310 0045 04000000 		.4byte	.LVL5
 1311 0049 14000000 		.4byte	.LFE64
 1312 004d 0400     		.2byte	0x4
 1313 004f F3       		.byte	0xf3
 1314 0050 01       		.uleb128 0x1
 1315 0051 50       		.byte	0x50
 1316 0052 9F       		.byte	0x9f
 1317 0053 00000000 		.4byte	0
 1318 0057 00000000 		.4byte	0
 1319              	.LLST2:
 1320 005b 00000000 		.4byte	.LVL13
 1321 005f 25000000 		.4byte	.LVL14-1
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 29


 1322 0063 0100     		.2byte	0x1
 1323 0065 50       		.byte	0x50
 1324 0066 25000000 		.4byte	.LVL14-1
 1325 006a 28000000 		.4byte	.LVL15
 1326 006e 0400     		.2byte	0x4
 1327 0070 F3       		.byte	0xf3
 1328 0071 01       		.uleb128 0x1
 1329 0072 50       		.byte	0x50
 1330 0073 9F       		.byte	0x9f
 1331 0074 28000000 		.4byte	.LVL15
 1332 0078 2B000000 		.4byte	.LVL16-1
 1333 007c 0100     		.2byte	0x1
 1334 007e 50       		.byte	0x50
 1335 007f 2B000000 		.4byte	.LVL16-1
 1336 0083 98000000 		.4byte	.LFE65
 1337 0087 0400     		.2byte	0x4
 1338 0089 F3       		.byte	0xf3
 1339 008a 01       		.uleb128 0x1
 1340 008b 50       		.byte	0x50
 1341 008c 9F       		.byte	0x9f
 1342 008d 00000000 		.4byte	0
 1343 0091 00000000 		.4byte	0
 1344              		.section	.debug_aranges,"",%progbits
 1345 0000 64000000 		.4byte	0x64
 1346 0004 0200     		.2byte	0x2
 1347 0006 00000000 		.4byte	.Ldebug_info0
 1348 000a 04       		.byte	0x4
 1349 000b 00       		.byte	0
 1350 000c 0000     		.2byte	0
 1351 000e 0000     		.2byte	0
 1352 0010 00000000 		.4byte	.LFB63
 1353 0014 10000000 		.4byte	.LFE63-.LFB63
 1354 0018 00000000 		.4byte	.LFB64
 1355 001c 14000000 		.4byte	.LFE64-.LFB64
 1356 0020 00000000 		.4byte	.LFB66
 1357 0024 10000000 		.4byte	.LFE66-.LFB66
 1358 0028 00000000 		.4byte	.LFB67
 1359 002c 08000000 		.4byte	.LFE67-.LFB67
 1360 0030 00000000 		.4byte	.LFB68
 1361 0034 54000000 		.4byte	.LFE68-.LFB68
 1362 0038 00000000 		.4byte	.LFB69
 1363 003c 30000000 		.4byte	.LFE69-.LFB69
 1364 0040 00000000 		.4byte	.LFB70
 1365 0044 34000000 		.4byte	.LFE70-.LFB70
 1366 0048 00000000 		.4byte	.LFB71
 1367 004c 40000000 		.4byte	.LFE71-.LFB71
 1368 0050 00000000 		.4byte	.LFB72
 1369 0054 60000000 		.4byte	.LFE72-.LFB72
 1370 0058 00000000 		.4byte	.LFB65
 1371 005c 98000000 		.4byte	.LFE65-.LFB65
 1372 0060 00000000 		.4byte	0
 1373 0064 00000000 		.4byte	0
 1374              		.section	.debug_ranges,"",%progbits
 1375              	.Ldebug_ranges0:
 1376 0000 00000000 		.4byte	.LFB63
 1377 0004 10000000 		.4byte	.LFE63
 1378 0008 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 30


 1379 000c 14000000 		.4byte	.LFE64
 1380 0010 00000000 		.4byte	.LFB66
 1381 0014 10000000 		.4byte	.LFE66
 1382 0018 00000000 		.4byte	.LFB67
 1383 001c 08000000 		.4byte	.LFE67
 1384 0020 00000000 		.4byte	.LFB68
 1385 0024 54000000 		.4byte	.LFE68
 1386 0028 00000000 		.4byte	.LFB69
 1387 002c 30000000 		.4byte	.LFE69
 1388 0030 00000000 		.4byte	.LFB70
 1389 0034 34000000 		.4byte	.LFE70
 1390 0038 00000000 		.4byte	.LFB71
 1391 003c 40000000 		.4byte	.LFE71
 1392 0040 00000000 		.4byte	.LFB72
 1393 0044 60000000 		.4byte	.LFE72
 1394 0048 00000000 		.4byte	.LFB65
 1395 004c 98000000 		.4byte	.LFE65
 1396 0050 00000000 		.4byte	0
 1397 0054 00000000 		.4byte	0
 1398              		.section	.debug_line,"",%progbits
 1399              	.Ldebug_line0:
 1400 0000 A5020000 		.section	.debug_str,"MS",%progbits,1
 1400      02008301 
 1400      00000201 
 1400      FB0E0D00 
 1400      01010101 
 1401              	.LASF11:
 1402 0000 6C6F6E67 		.ascii	"long long int\000"
 1402      206C6F6E 
 1402      6720696E 
 1402      7400
 1403              	.LASF40:
 1404 000e 73656C5F 		.ascii	"sel_strategy\000"
 1404      73747261 
 1404      74656779 
 1404      00
 1405              	.LASF35:
 1406 001b 5365745F 		.ascii	"Set_Strategy_Launch_Assist\000"
 1406      53747261 
 1406      74656779 
 1406      5F4C6175 
 1406      6E63685F 
 1407              	.LASF0:
 1408 0036 5F5F696E 		.ascii	"__int8_t\000"
 1408      74385F74 
 1408      00
 1409              	.LASF1:
 1410 003f 5F5F7569 		.ascii	"__uint8_t\000"
 1410      6E74385F 
 1410      7400
 1411              	.LASF32:
 1412 0049 4D61705F 		.ascii	"Map_Duty_Cycle\000"
 1412      44757479 
 1412      5F437963 
 1412      6C6500
 1413              	.LASF25:
 1414 0058 6272616B 		.ascii	"brake_state\000"
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 31


 1414      655F7374 
 1414      61746500 
 1415              	.LASF4:
 1416 0064 5F5F696E 		.ascii	"__int16_t\000"
 1416      7431365F 
 1416      7400
 1417              	.LASF8:
 1418 006e 5F5F696E 		.ascii	"__int32_t\000"
 1418      7433325F 
 1418      7400
 1419              	.LASF48:
 1420 0078 433A5C55 		.ascii	"C:\\Users\\badea\\Documents\\PSoC Creator\\can_bun\\"
 1420      73657273 
 1420      5C626164 
 1420      65615C44 
 1420      6F63756D 
 1421 00a6 48434D5F 		.ascii	"HCM_UPBDrive.cydsn\000"
 1421      55504244 
 1421      72697665 
 1421      2E637964 
 1421      736E00
 1422              	.LASF42:
 1423 00b9 6361725F 		.ascii	"car_state\000"
 1423      73746174 
 1423      6500
 1424              	.LASF49:
 1425 00c3 5365745F 		.ascii	"Set_Strategy_Freewheel\000"
 1425      53747261 
 1425      74656779 
 1425      5F467265 
 1425      65776865 
 1426              	.LASF29:
 1427 00da 64757479 		.ascii	"duty_cycle_percentage\000"
 1427      5F637963 
 1427      6C655F70 
 1427      65726365 
 1427      6E746167 
 1428              	.LASF26:
 1429 00f0 67656172 		.ascii	"gear\000"
 1429      00
 1430              	.LASF14:
 1431 00f5 696E7438 		.ascii	"int8_t\000"
 1431      5F7400
 1432              	.LASF18:
 1433 00fc 696E7433 		.ascii	"int32_t\000"
 1433      325F7400 
 1434              	.LASF19:
 1435 0104 666C6F61 		.ascii	"float\000"
 1435      7400
 1436              	.LASF2:
 1437 010a 7369676E 		.ascii	"signed char\000"
 1437      65642063 
 1437      68617200 
 1438              	.LASF30:
 1439 0116 48595F73 		.ascii	"HY_strategy_t\000"
 1439      74726174 
 1439      6567795F 
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 32


 1439      7400
 1440              	.LASF3:
 1441 0124 756E7369 		.ascii	"unsigned char\000"
 1441      676E6564 
 1441      20636861 
 1441      7200
 1442              	.LASF46:
 1443 0132 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1443      43313120 
 1443      352E342E 
 1443      31203230 
 1443      31363036 
 1444 0165 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1444      20726576 
 1444      6973696F 
 1444      6E203233 
 1444      37373135 
 1445 0198 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1445      66756E63 
 1445      74696F6E 
 1445      2D736563 
 1445      74696F6E 
 1446              	.LASF10:
 1447 01c0 6C6F6E67 		.ascii	"long unsigned int\000"
 1447      20756E73 
 1447      69676E65 
 1447      6420696E 
 1447      7400
 1448              	.LASF7:
 1449 01d2 73686F72 		.ascii	"short unsigned int\000"
 1449      7420756E 
 1449      7369676E 
 1449      65642069 
 1449      6E7400
 1450              	.LASF38:
 1451 01e5 5365745F 		.ascii	"Set_Strategy_Auto_Always_Regen\000"
 1451      53747261 
 1451      74656779 
 1451      5F417574 
 1451      6F5F416C 
 1452              	.LASF28:
 1453 0204 64726976 		.ascii	"driving_mode\000"
 1453      696E675F 
 1453      6D6F6465 
 1453      00
 1454              	.LASF6:
 1455 0211 5F5F7569 		.ascii	"__uint16_t\000"
 1455      6E743136 
 1455      5F7400
 1456              	.LASF20:
 1457 021c 646F7562 		.ascii	"double\000"
 1457      6C6500
 1458              	.LASF5:
 1459 0223 73686F72 		.ascii	"short int\000"
 1459      7420696E 
 1459      7400
 1460              	.LASF41:
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 33


 1461 022d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1461      52784275 
 1461      66666572 
 1461      00
 1462              	.LASF13:
 1463 023a 756E7369 		.ascii	"unsigned int\000"
 1463      676E6564 
 1463      20696E74 
 1463      00
 1464              	.LASF33:
 1465 0247 7470735F 		.ascii	"tps_percentage\000"
 1465      70657263 
 1465      656E7461 
 1465      676500
 1466              	.LASF36:
 1467 0256 5365745F 		.ascii	"Set_Strategy_Auto_No_Regen\000"
 1467      53747261 
 1467      74656779 
 1467      5F417574 
 1467      6F5F4E6F 
 1468              	.LASF12:
 1469 0271 6C6F6E67 		.ascii	"long long unsigned int\000"
 1469      206C6F6E 
 1469      6720756E 
 1469      7369676E 
 1469      65642069 
 1470              	.LASF15:
 1471 0288 75696E74 		.ascii	"uint8_t\000"
 1471      385F7400 
 1472              	.LASF45:
 1473 0290 43414E5F 		.ascii	"CAN_Transmit_To_ESC\000"
 1473      5472616E 
 1473      736D6974 
 1473      5F546F5F 
 1473      45534300 
 1474              	.LASF16:
 1475 02a4 696E7431 		.ascii	"int16_t\000"
 1475      365F7400 
 1476              	.LASF31:
 1477 02ac 5450535F 		.ascii	"TPS_to_Duty_Cycle_Percentage\000"
 1477      746F5F44 
 1477      7574795F 
 1477      4379636C 
 1477      655F5065 
 1478              	.LASF22:
 1479 02c9 6C6F6E67 		.ascii	"long double\000"
 1479      20646F75 
 1479      626C6500 
 1480              	.LASF23:
 1481 02d5 73697A65 		.ascii	"sizetype\000"
 1481      74797065 
 1481      00
 1482              	.LASF34:
 1483 02de 5365745F 		.ascii	"Set_Strategy_Manual\000"
 1483      53747261 
 1483      74656779 
 1483      5F4D616E 
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 34


 1483      75616C00 
 1484              	.LASF37:
 1485 02f2 5365745F 		.ascii	"Set_Strategy_Auto_Brake_Regen\000"
 1485      53747261 
 1485      74656779 
 1485      5F417574 
 1485      6F5F4272 
 1486              	.LASF21:
 1487 0310 63686172 		.ascii	"char\000"
 1487      00
 1488              	.LASF50:
 1489 0315 5365745F 		.ascii	"Set_Strategy\000"
 1489      53747261 
 1489      74656779 
 1489      00
 1490              	.LASF17:
 1491 0322 75696E74 		.ascii	"uint16_t\000"
 1491      31365F74 
 1491      00
 1492              	.LASF43:
 1493 032b 68796272 		.ascii	"hybrid_state\000"
 1493      69645F73 
 1493      74617465 
 1493      00
 1494              	.LASF9:
 1495 0338 6C6F6E67 		.ascii	"long int\000"
 1495      20696E74 
 1495      00
 1496              	.LASF47:
 1497 0341 7372635C 		.ascii	"src\\hybrid_mode.c\000"
 1497      68796272 
 1497      69645F6D 
 1497      6F64652E 
 1497      6300
 1498              	.LASF39:
 1499 0353 5365745F 		.ascii	"Set_Strategy_Torque_Fill\000"
 1499      53747261 
 1499      74656779 
 1499      5F546F72 
 1499      7175655F 
 1500              	.LASF24:
 1501 036c 656E6769 		.ascii	"engine_state\000"
 1501      6E655F73 
 1501      74617465 
 1501      00
 1502              	.LASF27:
 1503 0379 76656869 		.ascii	"vehicle_status_t\000"
 1503      636C655F 
 1503      73746174 
 1503      75735F74 
 1503      00
 1504              	.LASF44:
 1505 038a 52656164 		.ascii	"Read_Boost_Button\000"
 1505      5F426F6F 
 1505      73745F42 
 1505      7574746F 
 1505      6E00
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccTwrajh.s 			page 35


 1506              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
