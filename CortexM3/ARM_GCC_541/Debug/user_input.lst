ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"user_input.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Read_Rotary_Switch,"ax",%progbits
  20              		.align	2
  21              		.global	Read_Rotary_Switch
  22              		.thumb
  23              		.thumb_func
  24              		.type	Read_Rotary_Switch, %function
  25              	Read_Rotary_Switch:
  26              	.LFB63:
  27              		.file 1 "src\\user_input.c"
   1:src/user_input.c **** /*
   2:src/user_input.c **** * File:        user_input.c
   3:src/user_input.c **** * Description: Implements functions for reading and decoding user input from the binary selector,
   4:src/user_input.c **** *              rotary switch, and boost button. These inputs determine the hybrid strategy to be
   5:src/user_input.c **** *              applied based on driver intent. Includes bitwise decoding logic to convert
   6:src/user_input.c **** *              digital pin states into strategy indices.
   7:src/user_input.c **** */
   8:src/user_input.c **** 
   9:src/user_input.c **** #include <include/user_input.h>
  10:src/user_input.c **** 
  11:src/user_input.c **** /**************************************************************************************************
  12:src/user_input.c **** * Functions
  13:src/user_input.c **** ***************************************************************************************************
  14:src/user_input.c **** 
  15:src/user_input.c **** /*
  16:src/user_input.c ****  * Function:    Read_Rotary_Switch
  17:src/user_input.c ****  * Description: Decodes a single-active-bit selector input from a rotary switch.
  18:src/user_input.c ****  * Returns:
  19:src/user_input.c ****  *   - Strategy index in the range [0â€“5], where each power-of-two input maps to a unique mode.
  20:src/user_input.c ****  * Notes:
  21:src/user_input.c ****  *   - Assumes only one selector bit is active at a time.
  22:src/user_input.c ****  *   - Defaults to 0 if input does not match a known pattern.
  23:src/user_input.c ****  */
  24:src/user_input.c **** uint8_t Read_Rotary_Switch()
  25:src/user_input.c **** {
  28              		.loc 1 25 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 2


  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  26:src/user_input.c ****     uint8_t selector_stragy;
  27:src/user_input.c ****     
  28:src/user_input.c ****     // Read each pin individually
  29:src/user_input.c ****     if (Selector_In_1_Read() == ACTIVE_LOW)
  40              		.loc 1 29 0
  41 0006 FFF7FEFF 		bl	Selector_In_1_Read
  42 000a 0346     		mov	r3, r0
  43 000c 002B     		cmp	r3, #0
  44 000e 02D1     		bne	.L2
  30:src/user_input.c ****     {
  31:src/user_input.c ****         selector_stragy = MANUAL_S;
  45              		.loc 1 31 0
  46 0010 0123     		movs	r3, #1
  47 0012 FB71     		strb	r3, [r7, #7]
  48 0014 21E0     		b	.L3
  49              	.L2:
  32:src/user_input.c ****     }
  33:src/user_input.c ****     else if (Selector_In_2_Read() == ACTIVE_LOW)
  50              		.loc 1 33 0
  51 0016 FFF7FEFF 		bl	Selector_In_2_Read
  52 001a 0346     		mov	r3, r0
  53 001c 002B     		cmp	r3, #0
  54 001e 02D1     		bne	.L4
  34:src/user_input.c ****     {
  35:src/user_input.c ****         selector_stragy = LAUNCH_S;
  55              		.loc 1 35 0
  56 0020 0223     		movs	r3, #2
  57 0022 FB71     		strb	r3, [r7, #7]
  58 0024 19E0     		b	.L3
  59              	.L4:
  36:src/user_input.c ****     }
  37:src/user_input.c ****     else if (Selector_In_3_Read() == ACTIVE_LOW)
  60              		.loc 1 37 0
  61 0026 FFF7FEFF 		bl	Selector_In_3_Read
  62 002a 0346     		mov	r3, r0
  63 002c 002B     		cmp	r3, #0
  64 002e 02D1     		bne	.L5
  38:src/user_input.c ****     {
  39:src/user_input.c ****         selector_stragy = AUTO_NOREGEN_S;
  65              		.loc 1 39 0
  66 0030 0323     		movs	r3, #3
  67 0032 FB71     		strb	r3, [r7, #7]
  68 0034 11E0     		b	.L3
  69              	.L5:
  40:src/user_input.c ****     }
  41:src/user_input.c ****     else if (Selector_In_4_Read() == ACTIVE_LOW)
  70              		.loc 1 41 0
  71 0036 FFF7FEFF 		bl	Selector_In_4_Read
  72 003a 0346     		mov	r3, r0
  73 003c 002B     		cmp	r3, #0
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 3


  74 003e 02D1     		bne	.L6
  42:src/user_input.c ****     {
  43:src/user_input.c ****         selector_stragy = AUTO_BRAKEREGEN_S;
  75              		.loc 1 43 0
  76 0040 0423     		movs	r3, #4
  77 0042 FB71     		strb	r3, [r7, #7]
  78 0044 09E0     		b	.L3
  79              	.L6:
  44:src/user_input.c ****     }
  45:src/user_input.c ****     else if (Selector_In_5_Read() == ACTIVE_LOW)
  80              		.loc 1 45 0
  81 0046 FFF7FEFF 		bl	Selector_In_5_Read
  82 004a 0346     		mov	r3, r0
  83 004c 002B     		cmp	r3, #0
  84 004e 02D1     		bne	.L7
  46:src/user_input.c ****     {
  47:src/user_input.c ****         selector_stragy = AUTO_ALLREGEN_S;
  85              		.loc 1 47 0
  86 0050 0523     		movs	r3, #5
  87 0052 FB71     		strb	r3, [r7, #7]
  88 0054 01E0     		b	.L3
  89              	.L7:
  48:src/user_input.c ****     }
  49:src/user_input.c ****     else // No strategy selected or out of bounds
  50:src/user_input.c ****     {
  51:src/user_input.c ****         selector_stragy = FREEWHEEL_S;
  90              		.loc 1 51 0
  91 0056 0023     		movs	r3, #0
  92 0058 FB71     		strb	r3, [r7, #7]
  93              	.L3:
  52:src/user_input.c ****     }
  53:src/user_input.c **** 
  54:src/user_input.c ****     return selector_stragy;
  94              		.loc 1 54 0
  95 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  55:src/user_input.c **** }
  96              		.loc 1 55 0
  97 005c 1846     		mov	r0, r3
  98 005e 0837     		adds	r7, r7, #8
  99              		.cfi_def_cfa_offset 8
 100 0060 BD46     		mov	sp, r7
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 0062 80BD     		pop	{r7, pc}
 104              		.cfi_endproc
 105              	.LFE63:
 106              		.size	Read_Rotary_Switch, .-Read_Rotary_Switch
 107              		.section	.text.Read_Boost_Button,"ax",%progbits
 108              		.align	2
 109              		.global	Read_Boost_Button
 110              		.thumb
 111              		.thumb_func
 112              		.type	Read_Boost_Button, %function
 113              	Read_Boost_Button:
 114              	.LFB64:
  56:src/user_input.c **** 
  57:src/user_input.c **** /*
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 4


  58:src/user_input.c ****  * Function:    Read_Boost_Button
  59:src/user_input.c ****  * Description: Reads the state of the boost button.
  60:src/user_input.c ****  * Returns:
  61:src/user_input.c ****  *   - 1 if the boost button is pressed.
  62:src/user_input.c ****  *   - 0 otherwise.
  63:src/user_input.c ****  */
  64:src/user_input.c **** uint8_t Read_Boost_Button()
  65:src/user_input.c **** {
 115              		.loc 1 65 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 82B0     		sub	sp, sp, #8
 124              		.cfi_def_cfa_offset 16
 125 0004 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
  66:src/user_input.c ****     // Read pin and invert logic due to active-low configuration
  67:src/user_input.c ****     uint8_t boost_button_state = (uint8_t)(!Boost_Button_Read());
 127              		.loc 1 67 0
 128 0006 FFF7FEFF 		bl	Boost_Button_Read
 129 000a 0346     		mov	r3, r0
 130 000c 002B     		cmp	r3, #0
 131 000e 0CBF     		ite	eq
 132 0010 0123     		moveq	r3, #1
 133 0012 0023     		movne	r3, #0
 134 0014 DBB2     		uxtb	r3, r3
 135 0016 FB71     		strb	r3, [r7, #7]
  68:src/user_input.c **** 
  69:src/user_input.c ****     return boost_button_state;
 136              		.loc 1 69 0
 137 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  70:src/user_input.c **** }
 138              		.loc 1 70 0
 139 001a 1846     		mov	r0, r3
 140 001c 0837     		adds	r7, r7, #8
 141              		.cfi_def_cfa_offset 8
 142 001e BD46     		mov	sp, r7
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 0020 80BD     		pop	{r7, pc}
 146              		.cfi_endproc
 147              	.LFE64:
 148              		.size	Read_Boost_Button, .-Read_Boost_Button
 149 0022 00BF     		.text
 150              	.Letext0:
 151              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 152              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 153              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 154              		.section	.debug_info,"",%progbits
 155              	.Ldebug_info0:
 156 0000 18010000 		.4byte	0x118
 157 0004 0400     		.2byte	0x4
 158 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 5


 159 000a 04       		.byte	0x4
 160 000b 01       		.uleb128 0x1
 161 000c 84000000 		.4byte	.LASF22
 162 0010 0C       		.byte	0xc
 163 0011 6E010000 		.4byte	.LASF23
 164 0015 98010000 		.4byte	.LASF24
 165 0019 00000000 		.4byte	.Ldebug_ranges0+0
 166 001d 00000000 		.4byte	0
 167 0021 00000000 		.4byte	.Ldebug_line0
 168 0025 02       		.uleb128 0x2
 169 0026 01       		.byte	0x1
 170 0027 06       		.byte	0x6
 171 0028 8C010000 		.4byte	.LASF0
 172 002c 03       		.uleb128 0x3
 173 002d 67000000 		.4byte	.LASF4
 174 0031 02       		.byte	0x2
 175 0032 1D       		.byte	0x1d
 176 0033 37000000 		.4byte	0x37
 177 0037 02       		.uleb128 0x2
 178 0038 01       		.byte	0x1
 179 0039 08       		.byte	0x8
 180 003a 1A010000 		.4byte	.LASF1
 181 003e 02       		.uleb128 0x2
 182 003f 02       		.byte	0x2
 183 0040 05       		.byte	0x5
 184 0041 E9010000 		.4byte	.LASF2
 185 0045 02       		.uleb128 0x2
 186 0046 02       		.byte	0x2
 187 0047 07       		.byte	0x7
 188 0048 71000000 		.4byte	.LASF3
 189 004c 03       		.uleb128 0x3
 190 004d D9010000 		.4byte	.LASF5
 191 0051 02       		.byte	0x2
 192 0052 3F       		.byte	0x3f
 193 0053 57000000 		.4byte	0x57
 194 0057 02       		.uleb128 0x2
 195 0058 04       		.byte	0x4
 196 0059 05       		.byte	0x5
 197 005a 40010000 		.4byte	.LASF6
 198 005e 02       		.uleb128 0x2
 199 005f 04       		.byte	0x4
 200 0060 07       		.byte	0x7
 201 0061 3E000000 		.4byte	.LASF7
 202 0065 02       		.uleb128 0x2
 203 0066 08       		.byte	0x8
 204 0067 05       		.byte	0x5
 205 0068 00000000 		.4byte	.LASF8
 206 006c 02       		.uleb128 0x2
 207 006d 08       		.byte	0x8
 208 006e 07       		.byte	0x7
 209 006f 50000000 		.4byte	.LASF9
 210 0073 04       		.uleb128 0x4
 211 0074 04       		.byte	0x4
 212 0075 05       		.byte	0x5
 213 0076 696E7400 		.ascii	"int\000"
 214 007a 02       		.uleb128 0x2
 215 007b 04       		.byte	0x4
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 6


 216 007c 07       		.byte	0x7
 217 007d 1E000000 		.4byte	.LASF10
 218 0081 03       		.uleb128 0x3
 219 0082 12010000 		.4byte	.LASF11
 220 0086 03       		.byte	0x3
 221 0087 18       		.byte	0x18
 222 0088 2C000000 		.4byte	0x2c
 223 008c 03       		.uleb128 0x3
 224 008d F3010000 		.4byte	.LASF12
 225 0091 03       		.byte	0x3
 226 0092 2C       		.byte	0x2c
 227 0093 4C000000 		.4byte	0x4c
 228 0097 02       		.uleb128 0x2
 229 0098 04       		.byte	0x4
 230 0099 04       		.byte	0x4
 231 009a E3010000 		.4byte	.LASF13
 232 009e 02       		.uleb128 0x2
 233 009f 08       		.byte	0x8
 234 00a0 04       		.byte	0x4
 235 00a1 5B010000 		.4byte	.LASF14
 236 00a5 02       		.uleb128 0x2
 237 00a6 01       		.byte	0x1
 238 00a7 08       		.byte	0x8
 239 00a8 28010000 		.4byte	.LASF15
 240 00ac 02       		.uleb128 0x2
 241 00ad 08       		.byte	0x8
 242 00ae 04       		.byte	0x4
 243 00af 62010000 		.4byte	.LASF16
 244 00b3 02       		.uleb128 0x2
 245 00b4 04       		.byte	0x4
 246 00b5 07       		.byte	0x7
 247 00b6 FB010000 		.4byte	.LASF17
 248 00ba 05       		.uleb128 0x5
 249 00bb 2D010000 		.4byte	.LASF18
 250 00bf 01       		.byte	0x1
 251 00c0 18       		.byte	0x18
 252 00c1 81000000 		.4byte	0x81
 253 00c5 00000000 		.4byte	.LFB63
 254 00c9 64000000 		.4byte	.LFE63-.LFB63
 255 00cd 01       		.uleb128 0x1
 256 00ce 9C       		.byte	0x9c
 257 00cf E2000000 		.4byte	0xe2
 258 00d3 06       		.uleb128 0x6
 259 00d4 0E000000 		.4byte	.LASF20
 260 00d8 01       		.byte	0x1
 261 00d9 1A       		.byte	0x1a
 262 00da 81000000 		.4byte	0x81
 263 00de 02       		.uleb128 0x2
 264 00df 91       		.byte	0x91
 265 00e0 77       		.sleb128 -9
 266 00e1 00       		.byte	0
 267 00e2 05       		.uleb128 0x5
 268 00e3 49010000 		.4byte	.LASF19
 269 00e7 01       		.byte	0x1
 270 00e8 40       		.byte	0x40
 271 00e9 81000000 		.4byte	0x81
 272 00ed 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 7


 273 00f1 22000000 		.4byte	.LFE64-.LFB64
 274 00f5 01       		.uleb128 0x1
 275 00f6 9C       		.byte	0x9c
 276 00f7 0A010000 		.4byte	0x10a
 277 00fb 06       		.uleb128 0x6
 278 00fc 2B000000 		.4byte	.LASF21
 279 0100 01       		.byte	0x1
 280 0101 43       		.byte	0x43
 281 0102 81000000 		.4byte	0x81
 282 0106 02       		.uleb128 0x2
 283 0107 91       		.byte	0x91
 284 0108 77       		.sleb128 -9
 285 0109 00       		.byte	0
 286 010a 07       		.uleb128 0x7
 287 010b 7F010000 		.4byte	.LASF25
 288 010f 04       		.byte	0x4
 289 0110 1207     		.2byte	0x712
 290 0112 16010000 		.4byte	0x116
 291 0116 08       		.uleb128 0x8
 292 0117 8C000000 		.4byte	0x8c
 293 011b 00       		.byte	0
 294              		.section	.debug_abbrev,"",%progbits
 295              	.Ldebug_abbrev0:
 296 0000 01       		.uleb128 0x1
 297 0001 11       		.uleb128 0x11
 298 0002 01       		.byte	0x1
 299 0003 25       		.uleb128 0x25
 300 0004 0E       		.uleb128 0xe
 301 0005 13       		.uleb128 0x13
 302 0006 0B       		.uleb128 0xb
 303 0007 03       		.uleb128 0x3
 304 0008 0E       		.uleb128 0xe
 305 0009 1B       		.uleb128 0x1b
 306 000a 0E       		.uleb128 0xe
 307 000b 55       		.uleb128 0x55
 308 000c 17       		.uleb128 0x17
 309 000d 11       		.uleb128 0x11
 310 000e 01       		.uleb128 0x1
 311 000f 10       		.uleb128 0x10
 312 0010 17       		.uleb128 0x17
 313 0011 00       		.byte	0
 314 0012 00       		.byte	0
 315 0013 02       		.uleb128 0x2
 316 0014 24       		.uleb128 0x24
 317 0015 00       		.byte	0
 318 0016 0B       		.uleb128 0xb
 319 0017 0B       		.uleb128 0xb
 320 0018 3E       		.uleb128 0x3e
 321 0019 0B       		.uleb128 0xb
 322 001a 03       		.uleb128 0x3
 323 001b 0E       		.uleb128 0xe
 324 001c 00       		.byte	0
 325 001d 00       		.byte	0
 326 001e 03       		.uleb128 0x3
 327 001f 16       		.uleb128 0x16
 328 0020 00       		.byte	0
 329 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 8


 330 0022 0E       		.uleb128 0xe
 331 0023 3A       		.uleb128 0x3a
 332 0024 0B       		.uleb128 0xb
 333 0025 3B       		.uleb128 0x3b
 334 0026 0B       		.uleb128 0xb
 335 0027 49       		.uleb128 0x49
 336 0028 13       		.uleb128 0x13
 337 0029 00       		.byte	0
 338 002a 00       		.byte	0
 339 002b 04       		.uleb128 0x4
 340 002c 24       		.uleb128 0x24
 341 002d 00       		.byte	0
 342 002e 0B       		.uleb128 0xb
 343 002f 0B       		.uleb128 0xb
 344 0030 3E       		.uleb128 0x3e
 345 0031 0B       		.uleb128 0xb
 346 0032 03       		.uleb128 0x3
 347 0033 08       		.uleb128 0x8
 348 0034 00       		.byte	0
 349 0035 00       		.byte	0
 350 0036 05       		.uleb128 0x5
 351 0037 2E       		.uleb128 0x2e
 352 0038 01       		.byte	0x1
 353 0039 3F       		.uleb128 0x3f
 354 003a 19       		.uleb128 0x19
 355 003b 03       		.uleb128 0x3
 356 003c 0E       		.uleb128 0xe
 357 003d 3A       		.uleb128 0x3a
 358 003e 0B       		.uleb128 0xb
 359 003f 3B       		.uleb128 0x3b
 360 0040 0B       		.uleb128 0xb
 361 0041 49       		.uleb128 0x49
 362 0042 13       		.uleb128 0x13
 363 0043 11       		.uleb128 0x11
 364 0044 01       		.uleb128 0x1
 365 0045 12       		.uleb128 0x12
 366 0046 06       		.uleb128 0x6
 367 0047 40       		.uleb128 0x40
 368 0048 18       		.uleb128 0x18
 369 0049 9642     		.uleb128 0x2116
 370 004b 19       		.uleb128 0x19
 371 004c 01       		.uleb128 0x1
 372 004d 13       		.uleb128 0x13
 373 004e 00       		.byte	0
 374 004f 00       		.byte	0
 375 0050 06       		.uleb128 0x6
 376 0051 34       		.uleb128 0x34
 377 0052 00       		.byte	0
 378 0053 03       		.uleb128 0x3
 379 0054 0E       		.uleb128 0xe
 380 0055 3A       		.uleb128 0x3a
 381 0056 0B       		.uleb128 0xb
 382 0057 3B       		.uleb128 0x3b
 383 0058 0B       		.uleb128 0xb
 384 0059 49       		.uleb128 0x49
 385 005a 13       		.uleb128 0x13
 386 005b 02       		.uleb128 0x2
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 9


 387 005c 18       		.uleb128 0x18
 388 005d 00       		.byte	0
 389 005e 00       		.byte	0
 390 005f 07       		.uleb128 0x7
 391 0060 34       		.uleb128 0x34
 392 0061 00       		.byte	0
 393 0062 03       		.uleb128 0x3
 394 0063 0E       		.uleb128 0xe
 395 0064 3A       		.uleb128 0x3a
 396 0065 0B       		.uleb128 0xb
 397 0066 3B       		.uleb128 0x3b
 398 0067 05       		.uleb128 0x5
 399 0068 49       		.uleb128 0x49
 400 0069 13       		.uleb128 0x13
 401 006a 3F       		.uleb128 0x3f
 402 006b 19       		.uleb128 0x19
 403 006c 3C       		.uleb128 0x3c
 404 006d 19       		.uleb128 0x19
 405 006e 00       		.byte	0
 406 006f 00       		.byte	0
 407 0070 08       		.uleb128 0x8
 408 0071 35       		.uleb128 0x35
 409 0072 00       		.byte	0
 410 0073 49       		.uleb128 0x49
 411 0074 13       		.uleb128 0x13
 412 0075 00       		.byte	0
 413 0076 00       		.byte	0
 414 0077 00       		.byte	0
 415              		.section	.debug_aranges,"",%progbits
 416 0000 24000000 		.4byte	0x24
 417 0004 0200     		.2byte	0x2
 418 0006 00000000 		.4byte	.Ldebug_info0
 419 000a 04       		.byte	0x4
 420 000b 00       		.byte	0
 421 000c 0000     		.2byte	0
 422 000e 0000     		.2byte	0
 423 0010 00000000 		.4byte	.LFB63
 424 0014 64000000 		.4byte	.LFE63-.LFB63
 425 0018 00000000 		.4byte	.LFB64
 426 001c 22000000 		.4byte	.LFE64-.LFB64
 427 0020 00000000 		.4byte	0
 428 0024 00000000 		.4byte	0
 429              		.section	.debug_ranges,"",%progbits
 430              	.Ldebug_ranges0:
 431 0000 00000000 		.4byte	.LFB63
 432 0004 64000000 		.4byte	.LFE63
 433 0008 00000000 		.4byte	.LFB64
 434 000c 22000000 		.4byte	.LFE64
 435 0010 00000000 		.4byte	0
 436 0014 00000000 		.4byte	0
 437              		.section	.debug_line,"",%progbits
 438              	.Ldebug_line0:
 439 0000 7E010000 		.section	.debug_str,"MS",%progbits,1
 439      02004901 
 439      00000201 
 439      FB0E0D00 
 439      01010101 
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 10


 440              	.LASF8:
 441 0000 6C6F6E67 		.ascii	"long long int\000"
 441      206C6F6E 
 441      6720696E 
 441      7400
 442              	.LASF20:
 443 000e 73656C65 		.ascii	"selector_stragy\000"
 443      63746F72 
 443      5F737472 
 443      61677900 
 444              	.LASF10:
 445 001e 756E7369 		.ascii	"unsigned int\000"
 445      676E6564 
 445      20696E74 
 445      00
 446              	.LASF21:
 447 002b 626F6F73 		.ascii	"boost_button_state\000"
 447      745F6275 
 447      74746F6E 
 447      5F737461 
 447      746500
 448              	.LASF7:
 449 003e 6C6F6E67 		.ascii	"long unsigned int\000"
 449      20756E73 
 449      69676E65 
 449      6420696E 
 449      7400
 450              	.LASF9:
 451 0050 6C6F6E67 		.ascii	"long long unsigned int\000"
 451      206C6F6E 
 451      6720756E 
 451      7369676E 
 451      65642069 
 452              	.LASF4:
 453 0067 5F5F7569 		.ascii	"__uint8_t\000"
 453      6E74385F 
 453      7400
 454              	.LASF3:
 455 0071 73686F72 		.ascii	"short unsigned int\000"
 455      7420756E 
 455      7369676E 
 455      65642069 
 455      6E7400
 456              	.LASF22:
 457 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 457      43313120 
 457      352E342E 
 457      31203230 
 457      31363036 
 458 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 458      20726576 
 458      6973696F 
 458      6E203233 
 458      37373135 
 459 00ea 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 459      66756E63 
 459      74696F6E 
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 11


 459      2D736563 
 459      74696F6E 
 460              	.LASF11:
 461 0112 75696E74 		.ascii	"uint8_t\000"
 461      385F7400 
 462              	.LASF1:
 463 011a 756E7369 		.ascii	"unsigned char\000"
 463      676E6564 
 463      20636861 
 463      7200
 464              	.LASF15:
 465 0128 63686172 		.ascii	"char\000"
 465      00
 466              	.LASF18:
 467 012d 52656164 		.ascii	"Read_Rotary_Switch\000"
 467      5F526F74 
 467      6172795F 
 467      53776974 
 467      636800
 468              	.LASF6:
 469 0140 6C6F6E67 		.ascii	"long int\000"
 469      20696E74 
 469      00
 470              	.LASF19:
 471 0149 52656164 		.ascii	"Read_Boost_Button\000"
 471      5F426F6F 
 471      73745F42 
 471      7574746F 
 471      6E00
 472              	.LASF14:
 473 015b 646F7562 		.ascii	"double\000"
 473      6C6500
 474              	.LASF16:
 475 0162 6C6F6E67 		.ascii	"long double\000"
 475      20646F75 
 475      626C6500 
 476              	.LASF23:
 477 016e 7372635C 		.ascii	"src\\user_input.c\000"
 477      75736572 
 477      5F696E70 
 477      75742E63 
 477      00
 478              	.LASF25:
 479 017f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 479      52784275 
 479      66666572 
 479      00
 480              	.LASF0:
 481 018c 7369676E 		.ascii	"signed char\000"
 481      65642063 
 481      68617200 
 482              	.LASF24:
 483 0198 433A5C55 		.ascii	"C:\\Users\\badea\\Documents\\PSoC Creator\\can_bun\\"
 483      73657273 
 483      5C626164 
 483      65615C44 
 483      6F63756D 
ARM GAS  C:\Users\badea\AppData\Local\Temp\ccJ3ZWhc.s 			page 12


 484 01c6 48434D5F 		.ascii	"HCM_UPBDrive.cydsn\000"
 484      55504244 
 484      72697665 
 484      2E637964 
 484      736E00
 485              	.LASF5:
 486 01d9 5F5F696E 		.ascii	"__int32_t\000"
 486      7433325F 
 486      7400
 487              	.LASF13:
 488 01e3 666C6F61 		.ascii	"float\000"
 488      7400
 489              	.LASF2:
 490 01e9 73686F72 		.ascii	"short int\000"
 490      7420696E 
 490      7400
 491              	.LASF12:
 492 01f3 696E7433 		.ascii	"int32_t\000"
 492      325F7400 
 493              	.LASF17:
 494 01fb 73697A65 		.ascii	"sizetype\000"
 494      74797065 
 494      00
 495              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
